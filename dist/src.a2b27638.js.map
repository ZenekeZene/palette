{"version":3,"sources":["node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","node_modules/lodash/lodash.js","src/header.js","node_modules/browser-pack/_prelude.js","index.js","src/Eventable.js","src/InteractEvent.js","src/Interactable.js","src/Interaction.js","src/actions/base.js","src/actions/drag.js","src/actions/drop.js","src/actions/gesture.js","src/actions/resize.js","src/autoScroll.js","src/autoStart/InteractableMethods.js","src/autoStart/base.js","src/autoStart/drag.js","src/autoStart/gesture.js","src/autoStart/hold.js","src/autoStart/resize.js","src/defaultOptions.js","src/index.js","src/inertia.js","src/interact.js","src/interactablePreventDefault.js","src/modifiers/base.js","src/modifiers/restrict.js","src/modifiers/restrictEdges.js","src/modifiers/restrictSize.js","src/modifiers/snap.js","src/modifiers/snapSize.js","src/pointerEvents/PointerEvent.js","src/pointerEvents/base.js","src/pointerEvents/holdRepeat.js","src/pointerEvents/interactableTargets.js","src/scope.js","src/utils/Signals.js","src/utils/arr.js","src/utils/browser.js","src/utils/clone.js","src/utils/domObjects.js","src/utils/domUtils.js","src/utils/events.js","src/utils/extend.js","src/utils/getOriginXY.js","src/utils/hypot.js","src/utils/index.js","src/utils/interactionFinder.js","src/utils/is.js","src/utils/isWindow.js","src/utils/pointerExtend.js","src/utils/pointerUtils.js","src/utils/raf.js","src/utils/rect.js","src/utils/window.js","src/lib/drag.js","src/lib/grid.js","src/lib/color.js","src/lib/game.js","src/lib/persist.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["interact","require","activeNode","dropzones","callbackWhenDrop","offset","el","rect","getBoundingClientRect","top","left","dragMoveListener","event","target","x","parseFloat","getAttribute","dx","y","dy","classList","add","style","webkitTransform","transform","setAttribute","initDrag","origin","right","isEntered","dropZoneCurrent","dropzone","accept","overlap","ondropactivate","relatedTarget","ondragenter","draggableElement","dropzoneElement","i","length","isMyNode","ondragleave","remove","ondrop","textContent","ondropdeactivate","draggable","inertia","restrict","restriction","endOnly","elementRect","bottom","autoScroll","onmove","onend","isEnabled","contains","position","unset","index","indexOf","call","parentNode","children","setTimeout","setActiveNode","activeNodeEntry","init","dropzonesEntry","callbackWhenDropEntry","API","module","exports","swatchesGrid","document","getElementById","mixesGrid","size","swatchNodes","dropzoneNodes","fillGrid","wrapperGrid","firstChild","removeChild","items","itemNode","createElement","push","append","numberOfItems","brightnessCoef","swatchesHistorical","ColorObject","cmyk","setCMYK","prototype","getCMYK","JSON","parse","cmykNode","innerHTML","backgroundColor","getRGBColor","convertCMYKtoRGB","getRandomInterval","min","max","Math","ceil","floor","random","RGBArray","color","getColorCMYKRandom","calculateBrightnessCoefficient","calculateSimilarCoefficient","cont","summation","j","absSimilar","abs","getColorRelationed","colorRelationed","percentage","toFixed","result","parseInt","addColors","color1","color2","subtractColors","sub","_","drag","grid","app","swatches","activeColorObject","contSuccess","levelSuccessed","levelFailed","scoreToAument","checkSuccess","isEqual","updateActive","newActiveColorObject","doMix","createActiveObject","searchCorrectSwatchAndDropzone","dropzoneWasCorrect","swatchWasCorrect","getRandomEnabledItem","swatchActives","filter","swatch","sample","node","indexRandom","initSwatches","swatchesNodes","initDropzones","playLevel","numRows","numCols","setup","appEntry","levelSuccessedEntry","levelFailedEntry","scoreToAumentEntry","getData","key","localStorage","getItem","saveData","value","setItem","game","persist","nextButton","replayButton","control","numLevels","score","playButton","backButton","homePage","addEventListener","levels","levelCurrent","contSuccessTotal","swatchesNotCorrect","dropzonesNotCorrect","handNextLevel","showLevel","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","bundle","updateLink","link","newLink","cloneNode","onload","href","split","Date","now","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","OVERLAY_ID","OldModule","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","appendChild","stackTrace","innerText","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.11';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","/**\n * interact.js v1.3.4\n *\n * Copyright (c) 2012-2018 Taye Adeyemi <dev@taye.me>\n * Released under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n}\nelse {\n  module.exports = require('./src/index');\n}\n","const extend = require('./utils/extend.js');\n\nfunction fireUntilImmediateStopped (event, listeners) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) { break; }\n\n    listener(event);\n  }\n}\n\nclass Eventable {\n\n  constructor (options) {\n    this.options = extend({}, options || {});\n  }\n\n  fire (event) {\n    let listeners;\n    const onEvent = 'on' + event.type;\n    const global = this.global;\n\n    // Interactable#on() listeners\n    if ((listeners = this[event.type])) {\n      fireUntilImmediateStopped(event, listeners);\n    }\n\n    // interactable.onevent listener\n    if (this[onEvent]) {\n      this[onEvent](event);\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type]))  {\n      fireUntilImmediateStopped(event, listeners);\n    }\n  }\n\n  on (eventType, listener) {\n    // if this type of event was never bound\n    if (this[eventType]) {\n      this[eventType].push(listener);\n    }\n    else {\n      this[eventType] = [listener];\n    }\n  }\n\n  off (eventType, listener) {\n    // if it is an action event type\n    const eventList = this[eventType];\n    const index     = eventList? eventList.indexOf(listener) : -1;\n\n    if (index !== -1) {\n      eventList.splice(index, 1);\n    }\n\n    if (eventList && eventList.length === 0 || !listener) {\n      this[eventType] = undefined;\n    }\n  }\n}\n\nmodule.exports = Eventable;\n","const extend      = require('./utils/extend');\nconst getOriginXY = require('./utils/getOriginXY');\nconst defaults    = require('./defaultOptions');\nconst signals     = require('./utils/Signals').new();\n\nclass InteractEvent {\n  /** */\n  constructor (interaction, event, action, phase, element, related, preEnd = false) {\n    const target      = interaction.target;\n    const deltaSource = (target && target.options || defaults).deltaSource;\n    const origin      = getOriginXY(target, element, action);\n    const starting    = phase === 'start';\n    const ending      = phase === 'end';\n    const coords      = starting? interaction.startCoords : interaction.curCoords;\n    const prevEvent   = interaction.prevEvent;\n\n    element = element || interaction.element;\n\n    const page   = extend({}, coords.page);\n    const client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey       = event.ctrlKey;\n    this.altKey        = event.altKey;\n    this.shiftKey      = event.shiftKey;\n    this.metaKey       = event.metaKey;\n    this.button        = event.button;\n    this.buttons       = event.buttons;\n    this.target        = element;\n    this.currentTarget = element;\n    this.relatedTarget = related || null;\n    this.preEnd        = preEnd;\n    this.type          = action + (phase || '');\n    this.interaction   = interaction;\n    this.interactable  = target;\n\n    this.t0 = starting ? interaction.downTimes[interaction.downTimes.length - 1]\n                       : prevEvent.t0;\n\n    const signalArg = {\n      interaction,\n      event,\n      action,\n      phase,\n      element,\n      related,\n      page,\n      client,\n      coords,\n      starting,\n      ending,\n      deltaSource,\n      iEvent: this,\n    };\n\n    signals.fire('set-xy', signalArg);\n\n    if (ending) {\n      // use previous coords when ending\n      this.pageX = prevEvent.pageX;\n      this.pageY = prevEvent.pageY;\n      this.clientX = prevEvent.clientX;\n      this.clientY = prevEvent.clientY;\n    }\n    else {\n      this.pageX     = page.x;\n      this.pageY     = page.y;\n      this.clientX   = client.x;\n      this.clientY   = client.y;\n    }\n\n    this.x0        = interaction.startCoords.page.x - origin.x;\n    this.y0        = interaction.startCoords.page.y - origin.y;\n    this.clientX0  = interaction.startCoords.client.x - origin.x;\n    this.clientY0  = interaction.startCoords.client.y - origin.y;\n\n    signals.fire('set-delta', signalArg);\n\n    this.timeStamp = coords.timeStamp;\n    this.dt        = interaction.pointerDelta.timeStamp;\n    this.duration  = this.timeStamp - this.t0;\n\n    // speed and velocity in pixels per second\n    this.speed = interaction.pointerDelta[deltaSource].speed;\n    this.velocityX = interaction.pointerDelta[deltaSource].vx;\n    this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\n    this.swipe = (ending || phase === 'inertiastart')? this.getSwipe() : null;\n\n    signals.fire('new', signalArg);\n  }\n\n  getSwipe () {\n    const interaction = this.interaction;\n\n    if (interaction.prevEvent.speed < 600\n        || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null;\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n    const overlap = 22.5;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap;\n    const up   = 225 - overlap <= angle && angle < 315 + overlap;\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap);\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap;\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    };\n  }\n\n  preventDefault () {}\n\n  /** */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n\n  /** */\n  stopPropagation () {\n    this.propagationStopped = true;\n  }\n}\n\nsignals.on('set-delta', function ({ iEvent, interaction, starting, deltaSource }) {\n  const prevEvent = starting? iEvent : interaction.prevEvent;\n\n  if (deltaSource === 'client') {\n    iEvent.dx = iEvent.clientX - prevEvent.clientX;\n    iEvent.dy = iEvent.clientY - prevEvent.clientY;\n  }\n  else {\n    iEvent.dx = iEvent.pageX - prevEvent.pageX;\n    iEvent.dy = iEvent.pageY - prevEvent.pageY;\n  }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n","const clone     = require('./utils/clone');\nconst is        = require('./utils/is');\nconst events    = require('./utils/events');\nconst extend    = require('./utils/extend');\nconst actions   = require('./actions/base');\nconst scope     = require('./scope');\nconst Eventable = require('./Eventable');\nconst defaults  = require('./defaultOptions');\nconst signals   = require('./utils/Signals').new();\n\nconst {\n  getElementRect,\n  nodeContains,\n  trySelector,\n  matchesSelector,\n}                    = require('./utils/domUtils');\nconst { getWindow }  = require('./utils/window');\nconst { contains }   = require('./utils/arr');\nconst { wheelEvent } = require('./utils/browser');\n\n// all set interactables\nscope.interactables = [];\n\nclass Interactable {\n  /** */\n  constructor (target, options) {\n    options = options || {};\n\n    this.target   = target;\n    this.events   = new Eventable();\n    this._context = options.context || scope.document;\n    this._win     = getWindow(trySelector(target)? this._context : target);\n    this._doc     = this._win.document;\n\n    signals.fire('new', {\n      target,\n      options,\n      interactable: this,\n      win: this._win,\n    });\n\n    scope.addDocument( this._doc, this._win );\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  setOnEvents (action, phases) {\n    const onAction = 'on' + action;\n\n    if (is.function(phases.onstart)       ) { this.events[onAction + 'start'        ] = phases.onstart         ; }\n    if (is.function(phases.onmove)        ) { this.events[onAction + 'move'         ] = phases.onmove          ; }\n    if (is.function(phases.onend)         ) { this.events[onAction + 'end'          ] = phases.onend           ; }\n    if (is.function(phases.oninertiastart)) { this.events[onAction + 'inertiastart' ] = phases.oninertiastart  ; }\n\n    return this;\n  }\n\n  setPerAction (action, options) {\n    // for all the default per-action options\n    for (const option in options) {\n      // if this option exists for this action\n      if (option in defaults[action]) {\n        // if the option in the options arg is an object value\n        if (is.object(options[option])) {\n          // duplicate the object and merge\n          this.options[action][option] = clone(this.options[action][option] || {});\n          extend(this.options[action][option], options[option]);\n\n          if (is.object(defaults.perAction[option]) && 'enabled' in defaults.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false? false : true;\n          }\n        }\n        else if (is.bool(options[option]) && is.object(defaults.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        }\n        else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {object} The object's bounding rectangle.\n   */\n  getRect (element) {\n    element = element || this.target;\n\n    if (is.string(this.target) && !(is.element(element))) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker (checker) {\n    if (is.function(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  }\n\n  _backCompatOption (optionName, newValue) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      this.options[optionName] = newValue;\n\n      for (const action of actions.names) {\n        this.options[action][optionName] = newValue;\n      }\n\n      return this;\n    }\n\n    return this.options[optionName];\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin (newValue) {\n    return this._backCompatOption('origin', newValue);\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource (newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context () {\n    return this._context;\n  }\n\n  inContext (element) {\n    return (this._context === element.ownerDocument\n            || nodeContains(this._context, element));\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire (iEvent) {\n    this.events.fire(iEvent);\n\n    return this;\n  }\n\n  _onOffMultiple (method, eventType, listener, options) {\n    if (is.string(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (is.array(eventType)) {\n      for (const type of eventType) {\n        this[method](type, listener, options);\n      }\n\n      return true;\n    }\n\n    if (is.object(eventType)) {\n      for (const prop in eventType) {\n        this[method](prop, eventType[prop], listener);\n      }\n\n      return true;\n    }\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} eventType  The types of events to listen\n   * for\n   * @param {function} listener   The function event (s)\n   * @param {object | boolean} [options]    options object or useCapture flag\n   * for addEventListener\n   * @return {object} This Interactable\n   */\n  on (eventType, listener, options) {\n    if (this._onOffMultiple('on', eventType, listener, options)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') { eventType = wheelEvent; }\n\n    if (contains(Interactable.eventTypes, eventType)) {\n      this.events.on(eventType, listener);\n    }\n    // delegated event for selector\n    else if (is.string(this.target)) {\n      events.addDelegate(this.target, this._context, eventType, listener, options);\n    }\n    else {\n      events.add(this.target, eventType, listener, options);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener\n   *\n   * @param {string | array | object} eventType The types of events that were\n   * listened for\n   * @param {function} listener The listener function to be removed\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {object} This Interactable\n   */\n  off (eventType, listener, options) {\n    if (this._onOffMultiple('off', eventType, listener, options)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') { eventType = wheelEvent; }\n\n    // if it is an action event type\n    if (contains(Interactable.eventTypes, eventType)) {\n      this.events.off(eventType, listener);\n    }\n    // delegated event\n    else if (is.string(this.target)) {\n      events.removeDelegate(this.target, this._context, eventType, listener, options);\n    }\n    // remove listener from this Interatable's element\n    else {\n      events.remove(this.target, eventType, listener, options);\n    }\n\n    return this;\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set (options) {\n    if (!is.object(options)) {\n      options = {};\n    }\n\n    this.options = clone(defaults.base);\n\n    const perActions = clone(defaults.perAction);\n\n    for (const actionName in actions.methodDict) {\n      const methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = clone(defaults[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    for (const setting of Interactable.settingsMethods) {\n      this.options[setting] = defaults.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    signals.fire('set', {\n      options,\n      interactable: this,\n    });\n\n    return this;\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   *\n   * @return {interact}\n   */\n  unset () {\n    events.remove(this.target, 'all');\n\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in events.delegatedEvents) {\n        const delegated = events.delegatedEvents[type];\n\n        if (delegated.selectors[0] === this.target\n            && delegated.contexts[0] === this._context) {\n\n          delegated.selectors.splice(0, 1);\n          delegated.contexts .splice(0, 1);\n          delegated.listeners.splice(0, 1);\n\n          // remove the arrays if they are empty\n          if (!delegated.selectors.length) {\n            delegated[type] = null;\n          }\n        }\n\n        events.remove(this._context, type, events.delegateListener);\n        events.remove(this._context, type, events.delegateUseCapture, true);\n      }\n    }\n    else {\n      events.remove(this, 'all');\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(scope.interactables.indexOf(this), 1);\n\n    // Stop related interactions when an Interactable is unset\n    for (const interaction of scope.interactions || []) {\n      if (interaction.target === this && interaction.interacting() && !interaction._ending) {\n        interaction.stop();\n      }\n    }\n\n    return scope.interact;\n  }\n}\n\nscope.interactables.indexOfElement = function indexOfElement (target, context) {\n  context = context || scope.document;\n\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    if (interactable.target === target && interactable._context === context) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet (element, options, dontCheckInContext) {\n  const ret = this[this.indexOfElement(element, options && options.context)];\n\n  return ret && (is.string(element) || dontCheckInContext || ret.inContext(element))? ret : null;\n};\n\nscope.interactables.forEachMatch = function (element, callback) {\n  for (const interactable of this) {\n    let ret;\n\n    if ((is.string(interactable.target)\n        // target is a selector and the element matches\n        ? (is.element(element) && matchesSelector(element, interactable.target))\n        // target is the element\n        : element === interactable.target)\n        // the element is in context\n      && (interactable.inContext(element))) {\n      ret = callback(interactable);\n    }\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\n// all interact.js eventTypes\nInteractable.eventTypes = scope.eventTypes = [];\n\nInteractable.signals = signals;\n\nInteractable.settingsMethods = [ 'deltaSource', 'origin', 'preventDefault', 'rectChecker' ];\n\nmodule.exports = Interactable;\n","const scope      = require('./scope');\nconst utils      = require('./utils');\nconst events     = require('./utils/events');\nconst browser    = require('./utils/browser');\nconst domObjects = require('./utils/domObjects');\nconst finder     = require('./utils/interactionFinder');\nconst signals    = require('./utils/Signals').new();\n\nconst listeners   = {};\nconst methodNames = [\n  'pointerDown', 'pointerMove', 'pointerUp',\n  'updatePointer', 'removePointer',\n];\n\n// for ignoring browser's simulated mouse events\nlet prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nclass Interaction {\n  /** */\n  constructor ({ pointerType }) {\n    this.target        = null; // current interactable being interacted with\n    this.element       = null; // the target element of the interactable\n\n    this.prepared      = {     // action that's ready to be fired on next move event\n      name : null,\n      axis : null,\n      edges: null,\n    };\n\n    // keep track of added pointers\n    this.pointers    = [];\n    this.pointerIds  = [];\n    this.downTargets = [];\n    this.downTimes   = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page     : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client   : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0,\n    };\n\n    this.downEvent   = null;    // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget    = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null;      // previous action event\n\n    this.pointerIsDown   = false;\n    this.pointerWasMoved = false;\n    this._interacting    = false;\n    this._ending         = false;\n\n    this.pointerType = pointerType;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  pointerDown (pointer, event, eventTarget) {\n    const pointerIndex = this.updatePointer(pointer, event, true);\n\n    signals.fire('down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      interaction: this,\n    });\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction;\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget);\n   *     }\n   * });\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {object} interact\n   */\n  start (action, target, element) {\n    if (this.interacting()\n        || !this.pointerIsDown\n        || this.pointerIds.length < (action.name === 'gesture'? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (scope.interactions.indexOf(this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target         = target;\n    this.element        = element;\n\n    signals.fire('action-start', {\n      interaction: this,\n      event: this.downEvent,\n    });\n  }\n\n  pointerMove (pointer, event, eventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer);\n      utils.setCoords(this.curCoords, this.pointers);\n    }\n\n    const duplicateMove = (this.curCoords.page.x === this.prevCoords.page.x\n                           && this.curCoords.page.y === this.prevCoords.page.y\n                           && this.curCoords.client.x === this.prevCoords.client.x\n                           && this.curCoords.client.y === this.prevCoords.client.y);\n\n    let dx;\n    let dy;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > Interaction.pointerMoveTolerance;\n    }\n\n    const signalArg = {\n      pointer,\n      pointerIndex: this.getPointerIndex(pointer),\n      event,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this,\n      interactingBeforeMove: this.interacting(),\n    };\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n    }\n\n    signals.fire('move', signalArg);\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        this.doMove(signalArg);\n      }\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }});\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.doMove();\n   *     }\n   *   });\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  doMove (signalArg) {\n    signalArg = utils.extend({\n      pointer: this.pointers[0],\n      event: this.prevEvent,\n      eventTarget: this._eventTarget,\n      interaction: this,\n    }, signalArg || {});\n\n    signals.fire('before-action-move', signalArg);\n\n    if (!this._dontFireMove) {\n      signals.fire('action-move', signalArg);\n    }\n\n    this._dontFireMove = false;\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer, event, eventTarget, curEventTarget) {\n    const pointerIndex = this.getPointerIndex(pointer);\n\n    signals.fire(/cancel$/i.test(event.type)? 'cancel' : 'up', {\n      pointer,\n      pointerIndex,\n      event,\n      eventTarget,\n      curEventTarget,\n      interaction: this,\n    });\n\n    if (!this.simulation) {\n      this.end(event);\n    }\n\n    this.pointerIsDown = false;\n    this.removePointer(pointer, event);\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end();\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation();\n   *     }\n   *   });\n   * ```\n   *\n   * Stop the current action and fire an end event. Inertial movement does\n   * not happen.\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event) {\n    this._ending = true;\n\n    event = event || this.prevEvent;\n\n    if (this.interacting()) {\n      signals.fire('action-end', {\n        event,\n        interaction: this,\n      });\n    }\n\n    this.stop();\n    this._ending = false;\n  }\n\n  currentAction () {\n    return this._interacting? this.prepared.name: null;\n  }\n\n  interacting () {\n    return this._interacting;\n  }\n\n  /** */\n  stop () {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n      signals.fire('stop-' + this.prepared.name, { interaction: this });\n    }\n\n    this.target = this.element = null;\n\n    this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n  }\n\n  getPointerIndex (pointer) {\n    // mouse and pen interactions may have only one pointer\n    if (this.pointerType === 'mouse' || this.pointerType === 'pen') {\n      return 0;\n    }\n\n    return this.pointerIds.indexOf(utils.getPointerId(pointer));\n  }\n\n  updatePointer (pointer, event, down = event && /(down|start)$/i.test(event.type)) {\n    const id = utils.getPointerId(pointer);\n    let index = this.getPointerIndex(pointer);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n      this.pointerIds[index] = id;\n    }\n\n    if (down) {\n      signals.fire('update-pointer-down', {\n        pointer,\n        event,\n        down,\n        pointerId: id,\n        pointerIndex: index,\n        interaction: this,\n      });\n    }\n\n    this.pointers[index] = pointer;\n\n    return index;\n  }\n\n  removePointer (pointer, event) {\n    const index = this.getPointerIndex(pointer);\n\n    if (index === -1) { return; }\n\n    signals.fire('remove-pointer', {\n      pointer,\n      event,\n      pointerIndex: index,\n      interaction: this,\n    });\n\n    this.pointers   .splice(index, 1);\n    this.pointerIds .splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes  .splice(index, 1);\n  }\n\n  _updateEventTargets (target, currentTarget) {\n    this._eventTarget    = target;\n    this._curEventTarget = currentTarget;\n  }\n}\n\nfor (const method of methodNames) {\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions (method) {\n  return (function (event) {\n    const pointerType = utils.getPointerType(event);\n    const [eventTarget, curEventTarget] = utils.getEventTargets(event);\n    const matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch;\n        const interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction({ pointerType })]);\n      }\n    }\n    else {\n      let invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = scope.interactions[i].pointerType !== 'mouse' && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer\n          || (new Date().getTime() - prevTouchTime < 500)\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          || event.timeStamp === 0;\n      }\n\n      if (!invalidPointer) {\n        let interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n          interaction = new Interaction({ pointerType });\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (const [pointer, interaction] of matches) {\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  });\n}\n\nfunction endAll (event) {\n  for (const interaction of scope.interactions) {\n    interaction.end(event);\n    signals.fire('endall', { event, interaction });\n  }\n}\n\nconst docEvents = { /* 'eventType': listenerFunc */ };\nconst pEventTypes = browser.pEventTypes;\n\nif (domObjects.PointerEvent) {\n  docEvents[pEventTypes.down  ] = listeners.pointerDown;\n  docEvents[pEventTypes.move  ] = listeners.pointerMove;\n  docEvents[pEventTypes.up    ] = listeners.pointerUp;\n  docEvents[pEventTypes.cancel] = listeners.pointerUp;\n}\nelse {\n  docEvents.mousedown   = listeners.pointerDown;\n  docEvents.mousemove   = listeners.pointerMove;\n  docEvents.mouseup     = listeners.pointerUp;\n\n  docEvents.touchstart  = listeners.pointerDown;\n  docEvents.touchmove   = listeners.pointerMove;\n  docEvents.touchend    = listeners.pointerUp;\n  docEvents.touchcancel = listeners.pointerUp;\n}\n\ndocEvents.blur = endAll;\n\nfunction onDocSignal ({ doc }, signalName) {\n  const eventMethod = signalName.indexOf('add') === 0\n    ? events.add : events.remove;\n\n  // delegate event listener\n  for (const eventType in scope.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener);\n    eventMethod(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  for (const eventType in docEvents) {\n    eventMethod(doc, eventType, docEvents[eventType], browser.isIOS ? { passive: false } : undefined);\n  }\n}\n\nsignals.on('update-pointer-down', ({ interaction, pointer, pointerId, pointerIndex, event, eventTarget, down }) => {\n  interaction.pointerIds[pointerIndex] = pointerId;\n  interaction.pointers[pointerIndex] = pointer;\n\n  if (down) {\n    interaction.pointerIsDown = true;\n  }\n\n  if (!interaction.interacting()) {\n    utils.setCoords(interaction.startCoords, interaction.pointers);\n\n    utils.copyCoords(interaction.curCoords , interaction.startCoords);\n    utils.copyCoords(interaction.prevCoords, interaction.startCoords);\n\n    interaction.downEvent                 = event;\n    interaction.downTimes[pointerIndex]   = interaction.curCoords.timeStamp;\n    interaction.downTargets[pointerIndex] = eventTarget || event && utils.getEventTargets(event)[0];\n    interaction.pointerWasMoved           = false;\n\n    utils.pointerExtend(interaction.downPointer, pointer);\n  }\n});\n\nscope.signals.on('add-document'   , onDocSignal);\nscope.signals.on('remove-document', onDocSignal);\n\nInteraction.pointerMoveTolerance = 1;\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.endAll = endAll;\nInteraction.signals = signals;\nInteraction.docEvents = docEvents;\n\nscope.endAllInteractions = endAll;\n\nmodule.exports = Interaction;\n","const Interaction   = require('../Interaction');\nconst InteractEvent = require('../InteractEvent');\n\nconst actions = {\n  firePrepared,\n  names: [],\n  methodDict: {},\n};\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  interaction._interacting = true;\n  firePrepared(interaction, event, 'start');\n});\n\nInteraction.signals.on('action-move', function ({ interaction, event, preEnd }) {\n  firePrepared(interaction, event, 'move', preEnd);\n\n  // if the action was ended in a listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  firePrepared(interaction, event, 'end');\n});\n\nfunction firePrepared (interaction, event, phase, preEnd) {\n  const actionName = interaction.prepared.name;\n\n  const newEvent = new InteractEvent(interaction, event, actionName, phase, interaction.element, null, preEnd);\n\n  interaction.target.fire(newEvent);\n  interaction.prevEvent = newEvent;\n}\n\nmodule.exports = actions;\n","const actions        = require('./base');\nconst utils          = require('../utils');\nconst InteractEvent  = require('../InteractEvent');\n/** @lends Interactable */\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drag = {\n  defaults: {\n    enabled     : false,\n    mouseButtons: null,\n\n    origin    : null,\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    startAxis : 'xy',\n    lockAxis  : 'xy',\n  },\n\n  checker: function (pointer, event, interactable) {\n    const dragOptions = interactable.options.drag;\n\n    return dragOptions.enabled\n      ? { name: 'drag', axis: (dragOptions.lockAxis === 'start'\n                               ? dragOptions.startAxis\n                               : dragOptions.lockAxis)}\n      : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  },\n};\n\nInteraction.signals.on('before-action-move', function ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    interaction.curCoords.page.y   = interaction.startCoords.page.y;\n    interaction.curCoords.client.y = interaction.startCoords.client.y;\n\n    interaction.pointerDelta.page.speed   = Math.abs(interaction.pointerDelta.page.vx);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vx);\n    interaction.pointerDelta.client.vy = 0;\n    interaction.pointerDelta.page.vy   = 0;\n  }\n  else if (axis === 'y') {\n    interaction.curCoords.page.x   = interaction.startCoords.page.x;\n    interaction.curCoords.client.x = interaction.startCoords.client.x;\n\n    interaction.pointerDelta.page.speed   = Math.abs(interaction.pointerDelta.page.vy);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vy);\n    interaction.pointerDelta.client.vx = 0;\n    interaction.pointerDelta.page.vx   = 0;\n  }\n});\n\n// dragmove\nInteractEvent.signals.on('new', function ({ iEvent, interaction }) {\n  if (iEvent.type !== 'dragmove') { return; }\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    iEvent.pageY   = interaction.startCoords.page.y;\n    iEvent.clientY = interaction.startCoords.client.y;\n    iEvent.dy = 0;\n  }\n  else if (axis === 'y') {\n    iEvent.pageX   = interaction.startCoords.page.x;\n    iEvent.clientX = interaction.startCoords.client.x;\n    iEvent.dx = 0;\n  }\n});\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * });\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nInteractable.prototype.draggable = function (options) {\n  if (utils.is.object(options)) {\n    this.options.drag.enabled = options.enabled === false? false: true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis;\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis;\n    }\n\n    return this;\n  }\n\n  if (utils.is.bool(options)) {\n    this.options.drag.enabled = options;\n\n    if (!options) {\n      this.ondragstart = this.ondragstart = this.ondragend = null;\n    }\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nactions.drag = drag;\nactions.names.push('drag');\nutils.merge(Interactable.eventTypes, [\n  'dragstart',\n  'dragmove',\n  'draginertiastart',\n  'draginertiaresume',\n  'dragend',\n]);\nactions.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n","const actions        = require('./base');\nconst utils          = require('../utils');\nconst scope          = require('../scope');\n/** @lends module:interact */\nconst interact       = require('../interact');\nconst InteractEvent  = require('../InteractEvent');\n/** @lends Interactable */\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drop = {\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  },\n};\n\nlet dynamicDrop = false;\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements  = [];\n  interaction.activeDrops.rects     = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction.activeDrops, interaction.element);\n  }\n\n  const dragEvent = interaction.prevEvent;\n  const dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction.activeDrops, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new', function ({ interaction, iEvent, event }) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return; }\n\n  const draggableElement = interaction.element;\n  const dragEvent = iEvent;\n  const dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget  = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('action-move', function ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('action-end', function ({ interaction }) {\n  if (interaction.prepared.name === 'drag') {\n    fireDropEvents(interaction, interaction.dropEvents);\n  }\n});\n\nInteraction.signals.on('stop-drag', function ({ interaction }) {\n  interaction.activeDrops = {\n    dropzones: null,\n    elements: null,\n    rects: null,\n  };\n\n  interaction.dropEvents = null;\n});\n\nfunction collectDrops (activeDrops, element) {\n  const drops = [];\n  const elements = [];\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const current of scope.interactables) {\n    if (!current.options.drop.enabled) { continue; }\n\n    const accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if ((utils.is.element(accept) && accept !== element)\n        || (utils.is.string(accept)\n        && !utils.matchesSelector(element, accept))) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    const dropElements = utils.is.string(current.target)\n      ? current._context.querySelectorAll(current.target)\n      : [current.target];\n\n    for (const currentElement of dropElements) {\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements,\n    dropzones: drops,\n  };\n}\n\nfunction fireActiveDrops (activeDrops, event) {\n  let prevElement;\n\n  // loop through all active dropzones and trigger event\n  for (let i = 0; i < activeDrops.dropzones.length; i++) {\n    const current = activeDrops.dropzones[i];\n    const currentElement = activeDrops.elements [i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops (activeDrops, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  const possibleDrops = collectDrops(activeDrops, dragElement);\n\n  activeDrops.dropzones = possibleDrops.dropzones;\n  activeDrops.elements  = possibleDrops.elements;\n  activeDrops.rects     = [];\n\n  for (let i = 0; i < activeDrops.dropzones.length; i++) {\n    activeDrops.rects[i] = activeDrops.dropzones[i].getRect(activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop (dragEvent, event, dragElement) {\n  const interaction = dragEvent.interaction;\n  const validDrops = [];\n\n  if (dynamicDrop) {\n    setActiveDrops(interaction.activeDrops, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (let j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    const current        = interaction.activeDrops.dropzones[j];\n    const currentElement = interaction.activeDrops.elements [j];\n    const rect           = interaction.activeDrops.rects    [j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect)\n      ? currentElement\n      : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element : interaction.activeDrops.elements [dropIndex] || null,\n  };\n}\n\nfunction getDropEvents (interaction, pointerEvent, dragEvent) {\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  };\n\n  const tmpl = {\n    dragEvent,\n    interaction,\n    target       : interaction.dropElement,\n    dropzone     : interaction.dropTarget,\n    relatedTarget: dragEvent.target,\n    draggable    : dragEvent.interactable,\n    timeStamp    : dragEvent.timeStamp,\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = utils.extend({ type: 'dragleave' }, tmpl);\n\n      dragEvent.dragLeave    = dropEvents.leave.target   = interaction.prevDropElement;\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent,\n        interaction,\n        target       : interaction.dropElement,\n        dropzone     : interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable    : dragEvent.interactable,\n        timeStamp    : dragEvent.timeStamp,\n        type         : 'dragenter',\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = utils.extend({ type: 'drop' }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n    dragEvent.relatedTarget = interaction.dropElement;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = utils.extend({ type: 'dropactivate' }, tmpl);\n\n    dropEvents.activate.target   = null;\n    dropEvents.activate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = utils.extend({ type: 'dropdeactivate' }, tmpl);\n\n    dropEvents.deactivate.target   = null;\n    dropEvents.deactivate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = utils.extend({\n      dragmove     : dragEvent,\n      type         : 'dropmove',\n    }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents (interaction, dropEvents) {\n  const {\n    activeDrops,\n    prevDropTarget,\n    dropTarget,\n    dropElement,\n  } = interaction;\n\n  if (dropEvents.leave) { prevDropTarget.fire(dropEvents.leave); }\n  if (dropEvents.move ) {     dropTarget.fire(dropEvents.move ); }\n  if (dropEvents.enter) {     dropTarget.fire(dropEvents.enter); }\n  if (dropEvents.drop ) {     dropTarget.fire(dropEvents.drop ); }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(activeDrops, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget  = dropTarget;\n  interaction.prevDropElement = dropElement;\n}\n\n/**\n * ```js\n * interact(target)\n * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n *                       event,             // TouchEvent/PointerEvent/MouseEvent\n *                       dropped,           // bool result of the default checker\n *                       dropzone,          // dropzone Interactable\n *                       dropElement,       // dropzone elemnt\n *                       draggable,         // draggable Interactable\n *                       draggableElement) {// draggable element\n *\n *   return dropped && event.target.hasAttribute('allow-drop');\n * }\n * ```\n *\n * ```js\n * interact('.drop').dropzone({\n *   accept: '.can-drop' || document.getElementById('single-drop'),\n *   overlap: 'pointer' || 'center' || zeroToOne\n * }\n * ```\n *\n * Returns or sets whether draggables can be dropped onto this target to\n * trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged element\n * is over this Interactable.\n *\n * @param {boolean | object | null} [options] The new options to be set.\n * @return {boolean | Interactable} The current setting or this Interactable\n */\nInteractable.prototype.dropzone = function (options) {\n  if (utils.is.object(options)) {\n    this.options.drop.enabled = options.enabled === false? false: true;\n\n    if (utils.is.function(options.ondrop)          ) { this.events.ondrop           = options.ondrop          ; }\n    if (utils.is.function(options.ondropactivate)  ) { this.events.ondropactivate   = options.ondropactivate  ; }\n    if (utils.is.function(options.ondropdeactivate)) { this.events.ondropdeactivate = options.ondropdeactivate; }\n    if (utils.is.function(options.ondragenter)     ) { this.events.ondragenter      = options.ondragenter     ; }\n    if (utils.is.function(options.ondragleave)     ) { this.events.ondragleave      = options.ondragleave     ; }\n    if (utils.is.function(options.ondropmove)      ) { this.events.ondropmove       = options.ondropmove      ; }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    }\n    else if (utils.is.number(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n\n    return this;\n  }\n\n  if (utils.is.bool(options)) {\n    this.options.drop.enabled = options;\n\n    if (!options) {\n      this.ondragenter = this.ondragleave = this.ondrop\n        = this.ondropactivate = this.ondropdeactivate = null;\n    }\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  let dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return (this.options.drop.checker\n      ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement)\n      : false);\n  }\n\n  const dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    const origin = utils.getOriginXY(draggable, draggableElement, 'drag');\n    const page = utils.getPageXY(dragEvent);\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    const horizontal = (page.x > rect.left) && (page.x < rect.right);\n    const vertical   = (page.y > rect.top ) && (page.y < rect.bottom);\n\n    dropped = horizontal && vertical;\n  }\n\n  const dragRect = draggable.getRect(draggableElement);\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2;\n    const cy = dragRect.top  + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (dragRect && utils.is.number(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right , dragRect.right ) - Math.max(rect.left, dragRect.left))\n                          * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top , dragRect.top )));\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function ({ interactable }) {\n  interactable.dropzone(false);\n});\n\nInteractable.settingsMethods.push('dropChecker');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget      = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement     = null; // the element at the time of checking\n  interaction.prevDropTarget  = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents      = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [],      // the dropzones that are mentioned below\n    elements : [],      // elements of dropzones that accept the target draggable\n    rects    : [],      // the rects of the elements mentioned above\n  };\n\n});\n\nInteraction.signals.on('stop', function ({ interaction }) {\n  interaction.dropTarget = interaction.dropElement =\n    interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\n/**\n * Returns or sets whether the dimensions of dropzone elements are calculated\n * on every dragmove or only on dragstart for the default dropChecker\n *\n * @param {boolean} [newValue] True to check on each move. False to check only\n * before start\n * @return {boolean | interact} The current setting or interact\n */\ninteract.dynamicDrop = function (newValue) {\n  if (utils.is.bool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n      //calcRects(dropzones);\n    //}\n\n    dynamicDrop = newValue;\n\n    return interact;\n  }\n  return dynamicDrop;\n};\n\nutils.merge(Interactable.eventTypes, [\n  'dragenter',\n  'dragleave',\n  'dropactivate',\n  'dropdeactivate',\n  'dropmove',\n  'drop',\n]);\nactions.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n","const actions        = require('./base');\nconst utils          = require('../utils');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst gesture = {\n  defaults: {\n    enabled : false,\n    origin  : null,\n    restrict: null,\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  },\n};\n\nInteractEvent.signals.on('new', function ({ iEvent, interaction }) {\n  if (iEvent.type !== 'gesturestart') { return; }\n  iEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = iEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = iEvent.angle;\n  interaction.gesture.scale = 1;\n});\n\nInteractEvent.signals.on('new', function ({ iEvent, interaction }) {\n  if (iEvent.type !== 'gesturemove') { return; }\n\n  iEvent.ds = iEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(iEvent);\n\n  interaction.gesture.prevAngle = iEvent.angle;\n  interaction.gesture.prevDistance = iEvent.distance;\n\n  if (iEvent.scale !== Infinity\n      && iEvent.scale !== null\n      && iEvent.scale !== undefined\n      && !isNaN(iEvent.scale)) {\n\n    interaction.gesture.scale = iEvent.scale;\n  }\n});\n\n/**\n * ```js\n * interact(element).gesturable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // limit multiple gestures.\n *     // See the explanation in {@link Interactable.draggable} example\n *     max: Infinity,\n *     maxPerElement: 1,\n * });\n *\n * var isGestureable = interact(element).gesturable();\n * ```\n *\n * Gets or sets whether multitouch gestures can be performed on the target\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on gesture events (makes the Interactable gesturable)\n * @return {boolean | Interactable} A boolean indicating if this can be the\n * target of gesture events, or this Interactable\n */\nInteractable.prototype.gesturable = function (options) {\n  if (utils.is.object(options)) {\n    this.options.gesture.enabled = options.enabled === false? false: true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.is.bool(options)) {\n    this.options.gesture.enabled = options;\n\n    if (!options) {\n      this.ongesturestart = this.ongesturestart = this.ongestureend = null;\n    }\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('set-delta', function ({ interaction, iEvent, action, event, starting, ending, deltaSource }) {\n  if (action !== 'gesture') { return; }\n\n  const pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = 1;\n    iEvent.ds       = 0;\n    iEvent.angle    = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da       = 0;\n  }\n  else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box      = interaction.prevEvent.box;\n    iEvent.scale    = interaction.prevEvent.scale;\n    iEvent.ds       = iEvent.scale - 1;\n    iEvent.angle    = interaction.prevEvent.angle;\n    iEvent.da       = iEvent.angle - interaction.gesture.startAngle;\n  }\n  else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle    = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0,   // distance between two touches of touchStart\n    prevDistance : 0,\n    distance     : 0,\n\n    scale: 1,           // gesture.distance / gesture.startDistance\n\n    startAngle: 0,      // angle of line joining two touches\n    prevAngle : 0,      // angle of the previous gesture event\n  };\n});\n\nactions.gesture = gesture;\nactions.names.push('gesture');\nutils.merge(Interactable.eventTypes, [\n  'gesturestart',\n  'gesturemove',\n  'gestureend',\n]);\nactions.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n","const actions        = require('./base');\nconst utils          = require('../utils');\nconst browser        = require('../utils/browser');\nconst InteractEvent  = require('../InteractEvent');\n/** @lends Interactable */\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\n// Less Precision with touch input\nconst defaultMargin = browser.supportsTouch || browser.supportsPointerEvent? 20: 10;\n\nconst resize = {\n  defaults: {\n    enabled     : false,\n    mouseButtons: null,\n\n    origin    : null,\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) { return null; }\n\n    const page = utils.extend({}, interaction.curCoords.page);\n    const options = interactable.options;\n\n    if (options.resize.enabled) {\n      const resizeOptions = options.resize;\n      const resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.is.object(resizeOptions.edges)) {\n        for (const edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge,\n                                              resizeOptions.edges[edge],\n                                              page,\n                                              interaction._eventTarget,\n                                              element,\n                                              rect,\n                                              resizeOptions.margin || defaultMargin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges,\n          };\n        }\n      }\n      else {\n        const right  = options.resize.axis !== 'y' && page.x > (rect.right  - defaultMargin);\n        const bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - defaultMargin);\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right? 'x' : '') + (bottom? 'y' : ''),\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: (browser.isIe9 ? {\n    x : 'e-resize',\n    y : 's-resize',\n    xy: 'se-resize',\n\n    top        : 'n-resize',\n    left       : 'w-resize',\n    bottom     : 's-resize',\n    right      : 'e-resize',\n    topleft    : 'se-resize',\n    bottomright: 'se-resize',\n    topright   : 'ne-resize',\n    bottomleft : 'ne-resize',\n  } : {\n    x : 'ew-resize',\n    y : 'ns-resize',\n    xy: 'nwse-resize',\n\n    top        : 'ns-resize',\n    left       : 'ew-resize',\n    bottom     : 'ns-resize',\n    right      : 'ew-resize',\n    topleft    : 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright   : 'nesw-resize',\n    bottomleft : 'nesw-resize',\n  }),\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    }\n    else if (action.edges) {\n      let cursorKey = '';\n      const edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (let i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  },\n};\n\n// resizestart\nInteractEvent.signals.on('new', function ({ iEvent, interaction }) {\n  if (iEvent.type !== 'resizestart' || !interaction.prepared.edges) {\n    return;\n  }\n\n  const startRect = interaction.target.getRect(interaction.element);\n  const resizeOptions = interaction.target.options.resize;\n\n  /*\n   * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n   * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n   * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n   * on the active edges and the edge being interacted with.\n   */\n  if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n    const linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n    linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom);\n    linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right );\n    linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top   );\n    linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left  );\n\n    interaction.prepared._linkedEdges = linkedEdges;\n  }\n  else {\n    interaction.prepared._linkedEdges = null;\n  }\n\n  // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n  if (resizeOptions.preserveAspectRatio) {\n    interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n  }\n\n  interaction.resizeRects = {\n    start     : startRect,\n    current   : utils.extend({}, startRect),\n    inverted  : utils.extend({}, startRect),\n    previous  : utils.extend({}, startRect),\n    delta     : {\n      left: 0, right : 0, width : 0,\n      top : 0, bottom: 0, height: 0,\n    },\n  };\n\n  iEvent.rect = interaction.resizeRects.inverted;\n  iEvent.deltaRect = interaction.resizeRects.delta;\n});\n\n// resizemove\nInteractEvent.signals.on('new', function ({ iEvent, phase, interaction }) {\n  if (phase !== 'move' || !interaction.prepared.edges) { return; }\n\n  const resizeOptions = interaction.target.options.resize;\n  const invert = resizeOptions.invert;\n  const invertible = invert === 'reposition' || invert === 'negate';\n\n  let edges = interaction.prepared.edges;\n\n  const start      = interaction.resizeRects.start;\n  const current    = interaction.resizeRects.current;\n  const inverted   = interaction.resizeRects.inverted;\n  const delta      = interaction.resizeRects.delta;\n  const previous   = utils.extend(interaction.resizeRects.previous, inverted);\n  const originalEdges = edges;\n\n  let dx = iEvent.dx;\n  let dy = iEvent.dy;\n\n  if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n    // `resize.preserveAspectRatio` takes precedence over `resize.square`\n    const startAspectRatio = resizeOptions.preserveAspectRatio\n      ? interaction.resizeStartAspectRatio\n      : 1;\n\n    edges = interaction.prepared._linkedEdges;\n\n    if ((originalEdges.left && originalEdges.bottom)\n        || (originalEdges.right && originalEdges.top)) {\n      dy = -dx / startAspectRatio;\n    }\n    else if (originalEdges.left || originalEdges.right ) { dy = dx / startAspectRatio; }\n    else if (originalEdges.top  || originalEdges.bottom) { dx = dy * startAspectRatio; }\n  }\n\n  // update the 'current' rect without modifications\n  if (edges.top   ) { current.top    += dy; }\n  if (edges.bottom) { current.bottom += dy; }\n  if (edges.left  ) { current.left   += dx; }\n  if (edges.right ) { current.right  += dx; }\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    utils.extend(inverted, current);\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      let swap;\n\n      if (inverted.top > inverted.bottom) {\n        swap = inverted.top;\n\n        inverted.top = inverted.bottom;\n        inverted.bottom = swap;\n      }\n      if (inverted.left > inverted.right) {\n        swap = inverted.left;\n\n        inverted.left = inverted.right;\n        inverted.right = swap;\n      }\n    }\n  }\n  else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    inverted.top    = Math.min(current.top, start.bottom);\n    inverted.bottom = Math.max(current.bottom, start.top);\n    inverted.left   = Math.min(current.left, start.right);\n    inverted.right  = Math.max(current.right, start.left);\n  }\n\n  inverted.width  = inverted.right  - inverted.left;\n  inverted.height = inverted.bottom - inverted.top ;\n\n  for (const edge in inverted) {\n    delta[edge] = inverted[edge] - previous[edge];\n  }\n\n  iEvent.edges = interaction.prepared.edges;\n  iEvent.rect = inverted;\n  iEvent.deltaRect = delta;\n});\n\n/**\n * ```js\n * interact(element).resizable({\n *   onstart: function (event) {},\n *   onmove : function (event) {},\n *   onend  : function (event) {},\n *\n *   edges: {\n *     top   : true,       // Use pointer coords to check for resize.\n *     left  : false,      // Disable resizing from left edge.\n *     bottom: '.resize-s',// Resize if pointer target matches selector\n *     right : handleEl    // Resize if pointer target is the given Element\n *   },\n *\n *     // Width and height can be adjusted independently. When `true`, width and\n *     // height are adjusted at a 1:1 ratio.\n *     square: false,\n *\n *     // Width and height can be adjusted independently. When `true`, width and\n *     // height maintain the aspect ratio they had when resizing started.\n *     preserveAspectRatio: false,\n *\n *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n *   // 'negate' will allow the rect to have negative width/height\n *   // 'reposition' will keep the width/height positive by swapping\n *   // the top and bottom edges and/or swapping the left and right edges\n *   invert: 'none' || 'negate' || 'reposition'\n *\n *   // limit multiple resizes.\n *   // See the explanation in the {@link Interactable.draggable} example\n *   max: Infinity,\n *   maxPerElement: 1,\n * });\n *\n * var isResizeable = interact(element).resizable();\n * ```\n *\n * Gets or sets whether resize actions can be performed on the target\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on resize events (object makes the Interactable\n * resizable)\n * @return {boolean | Interactable} A boolean indicating if this can be the\n * target of resize elements, or this Interactable\n */\nInteractable.prototype.resizable = function (options) {\n  if (utils.is.object(options)) {\n    this.options.resize.enabled = options.enabled === false? false: true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    }\n    else if (options.axis === null) {\n      this.options.resize.axis = defaultOptions.resize.axis;\n    }\n\n    if (utils.is.bool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    }\n    else if (utils.is.bool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.is.bool(options)) {\n    this.options.resize.enabled = options;\n\n    if (!options) {\n      this.onresizestart = this.onresizestart = this.onresizeend = null;\n    }\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge (name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) { return false; }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = utils.is.number(rect.width )? rect.width  : rect.right  - rect.left;\n    const height = utils.is.number(rect.height)? rect.height : rect.bottom - rect.top ;\n\n    if (width < 0) {\n      if      (name === 'left' ) { name = 'right'; }\n      else if (name === 'right') { name = 'left' ; }\n    }\n    if (height < 0) {\n      if      (name === 'top'   ) { name = 'bottom'; }\n      else if (name === 'bottom') { name = 'top'   ; }\n    }\n\n    if (name === 'left'  ) { return page.x < ((width  >= 0? rect.left: rect.right ) + margin); }\n    if (name === 'top'   ) { return page.y < ((height >= 0? rect.top : rect.bottom) + margin); }\n\n    if (name === 'right' ) { return page.x > ((width  >= 0? rect.right : rect.left) - margin); }\n    if (name === 'bottom') { return page.y > ((height >= 0? rect.bottom: rect.top ) - margin); }\n  }\n\n  // the remaining checks require an element\n  if (!utils.is.element(element)) { return false; }\n\n  return utils.is.element(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('set-delta', function ({ interaction, iEvent, action }) {\n  if (action !== 'resize' || !interaction.resizeAxes) { return; }\n\n  const options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    }\n    else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  }\n  else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    }\n    else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nactions.resize = resize;\nactions.names.push('resize');\nutils.merge(Interactable.eventTypes, [\n  'resizestart',\n  'resizemove',\n  'resizeinertiastart',\n  'resizeinertiaresume',\n  'resizeend',\n]);\nactions.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n","const raf            = require('./utils/raf');\nconst getWindow      = require('./utils/window').getWindow;\nconst is             = require('./utils/is');\nconst domUtils       = require('./utils/domUtils');\nconst Interaction    = require('./Interaction');\nconst defaultOptions = require('./defaultOptions');\n\nconst autoScroll = {\n  defaults: {\n    enabled  : false,\n    container: null,     // the item that is scrolled (Window or HTMLElement)\n    margin   : 60,\n    speed    : 300,      // the scroll speed in pixels per second\n  },\n\n  interaction: null,\n  i: null,    // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    const options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(autoScroll.interaction.element);\n    const now = new Date().getTime();\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    const s = options.speed * dt;\n\n    if (s >= 1) {\n      if (is.window(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      }\n      else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop  += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    const options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function ({ interaction, pointer }) {\n    if (!(interaction.interacting()\n          && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    let top;\n    let right;\n    let bottom;\n    let left;\n\n    const options = interaction.target.options[interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(interaction.element);\n\n    if (is.window(container)) {\n      left   = pointer.clientX < autoScroll.margin;\n      top    = pointer.clientY < autoScroll.margin;\n      right  = pointer.clientX > container.innerWidth  - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    }\n    else {\n      const rect = domUtils.getElementClientRect(container);\n\n      left   = pointer.clientX < rect.left   + autoScroll.margin;\n      top    = pointer.clientY < rect.top    + autoScroll.margin;\n      right  = pointer.clientX > rect.right  - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = (right ? 1: left? -1: 0);\n    autoScroll.y = (bottom? 1:  top? -1: 0);\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed  = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  },\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('action-move', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n","/** @lends Interactable */\nconst Interactable = require('../Interactable');\nconst actions      = require('../actions/base');\nconst is           = require('../utils/is');\nconst domUtils     = require('../utils/domUtils');\n\nconst { warnOnce } = require('../utils');\n\nInteractable.prototype.getAction = function (pointer, event, interaction, element) {\n  const action = this.defaultActionChecker(pointer, event, interaction, element);\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction);\n  }\n\n  return action;\n};\n\n/**\n * ```js\n * interact(element, { ignoreFrom: document.getElementById('no-action') });\n * // or\n * interact(element).ignoreFrom('input, textarea, a');\n * ```\n * @deprecated\n * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n * of it's parents match the given CSS selector or Element, no\n * drag/resize/gesture is started.\n *\n * Don't use this method. Instead set the `ignoreFrom` option for each action\n * or for `pointerEvents`\n *\n * @example\n * interact(targett)\n *   .draggable({\n *     ignoreFrom: 'input, textarea, a[href]'',\n *   })\n *   .pointerEvents({\n *     ignoreFrom: '[no-pointer]',\n *   });\n *\n * @param {string | Element | null} [newValue] a CSS selector string, an\n * Element or `null` to not ignore any elements\n * @return {string | Element | object} The current ignoreFrom value or this\n * Interactable\n */\nInteractable.prototype.ignoreFrom = warnOnce(function (newValue) {\n  return this._backCompatOption('ignoreFrom', newValue);\n}, 'Interactable.ignoreForm() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).');\n\n/**\n * ```js\n *\n * @deprecated\n * A drag/resize/gesture is started only If the target of the `mousedown`,\n * `pointerdown` or `touchstart` event or any of it's parents match the given\n * CSS selector or Element.\n *\n * Don't use this method. Instead set the `allowFrom` option for each action\n * or for `pointerEvents`\n *\n * @example\n * interact(targett)\n *   .resizable({\n *     allowFrom: '.resize-handle',\n *   .pointerEvents({\n *     allowFrom: '.handle',,\n *   });\n *\n * @param {string | Element | null} [newValue] a CSS selector string, an\n * Element or `null` to allow from any element\n * @return {string | Element | object} The current allowFrom value or this\n * Interactable\n */\nInteractable.prototype.allowFrom = warnOnce(function (newValue) {\n  return this._backCompatOption('allowFrom', newValue);\n}, 'Interactable.allowForm() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).');\n\nInteractable.prototype.testIgnore = function (ignoreFrom, interactableElement, element) {\n  if (!ignoreFrom || !is.element(element)) { return false; }\n\n  if (is.string(ignoreFrom)) {\n    return domUtils.matchesUpTo(element, ignoreFrom, interactableElement);\n  }\n  else if (is.element(ignoreFrom)) {\n    return domUtils.nodeContains(ignoreFrom, element);\n  }\n\n  return false;\n};\n\nInteractable.prototype.testAllow = function (allowFrom, interactableElement, element) {\n  if (!allowFrom) { return true; }\n\n  if (!is.element(element)) { return false; }\n\n  if (is.string(allowFrom)) {\n    return domUtils.matchesUpTo(element, allowFrom, interactableElement);\n  }\n  else if (is.element(allowFrom)) {\n    return domUtils.nodeContains(allowFrom, element);\n  }\n\n  return false;\n};\n\nInteractable.prototype.testIgnoreAllow = function (options, interactableElement, eventTarget) {\n  return (!this.testIgnore(options.ignoreFrom, interactableElement, eventTarget)\n    && this.testAllow(options.allowFrom, interactableElement, eventTarget));\n};\n\n/**\n * ```js\n * interact('.resize-drag')\n *   .resizable(true)\n *   .draggable(true)\n *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n *\n *   if (interact.matchesSelector(event.target, '.drag-handle') {\n *     // force drag with handle target\n *     action.name = drag;\n *   }\n *   else {\n *     // resize from the top and right edges\n *     action.name  = 'resize';\n *     action.edges = { top: true, right: true };\n *   }\n *\n *   return action;\n * });\n * ```\n *\n * Gets or sets the function used to check action to be performed on\n * pointerDown\n *\n * @param {function | null} [checker] A function which takes a pointer event,\n * defaultAction string, interactable, element and interaction as parameters\n * and returns an object with name property 'drag' 'resize' or 'gesture' and\n * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n * props.\n * @return {Function | Interactable} The checker function or this Interactable\n */\nInteractable.prototype.actionChecker = function (checker) {\n  if (is.function(checker)) {\n    this.options.actionChecker = checker;\n\n    return this;\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker;\n\n    return this;\n  }\n\n  return this.options.actionChecker;\n};\n\n/**\n * Returns or sets whether the the cursor should be changed depending on the\n * action that would be performed if the mouse were pressed and dragged.\n *\n * @param {boolean} [newValue]\n * @return {boolean | Interactable} The current setting or this Interactable\n */\nInteractable.prototype.styleCursor = function (newValue) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue;\n\n    return this;\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor;\n\n    return this;\n  }\n\n  return this.options.styleCursor;\n};\n\nInteractable.prototype.defaultActionChecker = function (pointer, event, interaction, element) {\n  const rect = this.getRect(element);\n  const buttons = event.buttons || ({\n    0: 1,\n    1: 4,\n    3: 8,\n    4: 16,\n  })[event.button];\n  let action = null;\n\n  for (const actionName of actions.names) {\n    // check mouseButton setting if the pointer is down\n    if (interaction.pointerIsDown\n        && /mouse|pointer/.test(interaction.pointerType)\n        && (buttons & this.options[actionName].mouseButtons) === 0) {\n      continue;\n    }\n\n    action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n    if (action) {\n      return action;\n    }\n  }\n};\n\n","const interact       = require('../interact');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst actions        = require('../actions/base');\nconst defaultOptions = require('../defaultOptions');\nconst scope          = require('../scope');\nconst utils          = require('../utils');\nconst signals        = require('../utils/Signals').new();\n\nrequire('./InteractableMethods');\n\nconst autoStart = {\n  signals,\n  withinInteractionLimit,\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: Infinity,\n  defaults: {\n    perAction: {\n      manualStart: false,\n      max: Infinity,\n      maxPerElement: 1,\n      allowFrom:  null,\n      ignoreFrom: null,\n\n      // only allow left button by default\n      // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n      mouseButtons: 1,\n    },\n  },\n  setActionDefaults: function (action) {\n    utils.extend(action.defaults, autoStart.defaults.perAction);\n  },\n  validateAction,\n};\n\n// set cursor style on mousedown\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget }) {\n  if (interaction.interacting()) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\n// set cursor style on mousemove\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget }) {\n  if (interaction.pointerType !== 'mouse'\n      || interaction.pointerIsDown\n      || interaction.interacting()) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  const { interaction, event } = arg;\n\n  if (!interaction.pointerIsDown\n      || interaction.interacting()\n      || !interaction.pointerWasMoved\n      || !interaction.prepared.name) {\n    return;\n  }\n\n  signals.fire('before-start', arg);\n\n  const target = interaction.target;\n\n  if (interaction.prepared.name && target) {\n    // check manualStart and interaction limit\n    if (target.options[interaction.prepared.name].manualStart\n        || !withinInteractionLimit(target, interaction.element, interaction.prepared)) {\n      interaction.stop(event);\n    }\n    else {\n      interaction.start(interaction.prepared, target, interaction.element);\n    }\n  }\n});\n\n// Check if the current target supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction (action, interactable, element, eventTarget) {\n  if (utils.is.object(action)\n      && interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget)\n      && interactable.options[action.name].enabled\n      && withinInteractionLimit(interactable, element, action)) {\n    return action;\n  }\n\n  return null;\n}\n\nfunction validateSelector (interaction, pointer, event, matches, matchElements, eventTarget) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i];\n    const matchElement = matchElements[i];\n    const action = validateAction(match.getAction(pointer, event, interaction, matchElement),\n                                  match,\n                                  matchElement,\n                                  eventTarget);\n\n    if (action) {\n      return {\n        action,\n        target: match,\n        element: matchElement,\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo (interaction, pointer, event, eventTarget) {\n  let matches = [];\n  let matchElements = [];\n\n  let element = eventTarget;\n\n  function pushMatches (interactable) {\n    matches.push(interactable);\n    matchElements.push(element);\n  }\n\n  while (utils.is.element(element)) {\n    matches = [];\n    matchElements = [];\n\n    scope.interactables.forEachMatch(element, pushMatches);\n\n    const actionInfo = validateSelector(interaction, pointer, event, matches, matchElements, eventTarget);\n\n    if (actionInfo.action\n      && !actionInfo.target.options[actionInfo.action.name].manualStart) {\n      return actionInfo;\n    }\n\n    element = utils.parentNode(element);\n  }\n\n  return {};\n}\n\nfunction prepare (interaction, { action, target, element }) {\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    const cursor = action? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  signals.fire('prepared', { interaction: interaction });\n}\n\nInteraction.signals.on('stop', function ({ interaction }) {\n  const target = interaction.target;\n\n  if (target && target.options.styleCursor) {\n    target._doc.documentElement.style.cursor = '';\n  }\n});\n\nfunction withinInteractionLimit (interactable, element, action) {\n  const options = interactable.options;\n  const maxActions = options[action.name].max;\n  const maxPerElement = options[action.name].maxPerElement;\n  let activeInteractions = 0;\n  let targetCount = 0;\n  let targetElementCount = 0;\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStart.maxInteractions)) { return; }\n\n  for (const interaction of scope.interactions) {\n    const otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) { continue; }\n\n    activeInteractions++;\n\n    if (activeInteractions >= autoStart.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) { continue; }\n\n    targetCount += (otherAction === action.name)|0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return autoStart.maxInteractions > 0;\n}\n\n/**\n * Returns or sets the maximum number of concurrent interactions allowed.  By\n * default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables and\n * elements, you need to enable it in the draggable, resizable and gesturable\n * `'max'` and `'maxPerElement'` options.\n *\n * @alias module:interact.maxInteractions\n *\n * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n */\ninteract.maxInteractions = function (newValue) {\n  if (utils.is.number(newValue)) {\n    autoStart.maxInteractions = newValue;\n\n    return interact;\n  }\n\n  return autoStart.maxInteractions;\n};\n\nInteractable.settingsMethods.push('styleCursor');\nInteractable.settingsMethods.push('actionChecker');\nInteractable.settingsMethods.push('ignoreFrom');\nInteractable.settingsMethods.push('allowFrom');\n\ndefaultOptions.base.actionChecker = null;\ndefaultOptions.base.styleCursor = true;\n\nutils.extend(defaultOptions.perAction, autoStart.defaults.perAction);\n\nmodule.exports = autoStart;\n","const autoStart = require('./base');\nconst scope     = require('../scope');\nconst is        = require('../utils/is');\n\nconst { parentNode } = require('../utils/domUtils');\n\nautoStart.setActionDefaults(require('../actions/drag'));\n\nautoStart.signals.on('before-start',  function ({ interaction, eventTarget, dx, dy }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx);\n  const absY = Math.abs(dy);\n  const targetOptions = interaction.target.options.drag;\n  const startAxis = targetOptions.startAxis;\n  const currentAxis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy');\n\n  interaction.prepared.axis = targetOptions.lockAxis === 'start'\n    ? currentAxis[0] // always lock to one axis even if currentAxis === 'xy'\n    : targetOptions.lockAxis;\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget;\n\n    const getDraggable = function (interactable) {\n      if (interactable === interaction.target) { return; }\n\n      const options = interaction.target.options.drag;\n\n      if (!options.manualStart\n          && interactable.testIgnoreAllow(options, element, eventTarget)) {\n\n        const action = interactable.getAction(\n          interaction.downPointer, interaction.downEvent, interaction, element);\n\n        if (action\n            && action.name === 'drag'\n            && checkStartAxis(currentAxis, interactable)\n            && autoStart.validateAction(action, interactable, element, eventTarget)) {\n\n          return interactable;\n        }\n      }\n    };\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable);\n\n      if (interactable) {\n        interaction.prepared.name = 'drag';\n        interaction.target = interactable;\n        interaction.element = element;\n        break;\n      }\n\n      element = parentNode(element);\n    }\n  }\n});\n\nfunction checkStartAxis (startAxis, interactable) {\n  if (!interactable) { return false; }\n\n  const thisAxis = interactable.options.drag.startAxis;\n\n  return (startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis);\n}\n","require('./base').setActionDefaults(require('../actions/gesture'));\n","const autoStart   = require('./base');\nconst Interaction = require('../Interaction');\n\nautoStart.defaults.perAction.hold = 0;\nautoStart.defaults.perAction.delay = 0;\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.autoStartHoldTimer = null;\n});\n\nautoStart.signals.on('prepared', function ({ interaction }) {\n  const hold = getHoldDuration(interaction);\n\n  if (hold > 0) {\n    interaction.autoStartHoldTimer = setTimeout(() => {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, hold);\n  }\n});\n\nInteraction.signals.on('move', function ({ interaction, duplicate }) {\n  if (interaction.pointerWasMoved && !duplicate) {\n    clearTimeout(interaction.autoStartHoldTimer);\n  }\n});\n\n// prevent regular down->move autoStart\nautoStart.signals.on('before-start', function ({ interaction }) {\n  const hold = getHoldDuration(interaction);\n\n  if (hold > 0) {\n    interaction.prepared.name = null;\n  }\n});\n\nfunction getHoldDuration (interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name;\n\n  if (!actionName) { return null; }\n\n  const options = interaction.target.options;\n\n  return options[actionName].hold || options[actionName].delay;\n}\n\nmodule.exports = {\n  getHoldDuration,\n};\n","require('./base').setActionDefaults(require('../actions/resize'));\n","module.exports = {\n  base: {\n    accept        : null,\n    preventDefault: 'auto',\n    deltaSource   : 'page',\n  },\n\n  perAction: {\n    origin: { x: 0, y: 0 },\n\n    inertia: {\n      enabled          : false,\n      resistance       : 10,    // the lambda in exponential decay\n      minSpeed         : 100,   // target speed must be above this for inertia to start\n      endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n      allowResume      : true,  // allow resuming an action in inertia phase\n      smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n    },\n  },\n};\n","/* browser entry point */\n\n// inertia\nrequire('./inertia');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\n// pointerEvents\nrequire('./pointerEvents/base');\nrequire('./pointerEvents/holdRepeat');\nrequire('./pointerEvents/interactableTargets');\n\n// autoStart hold\nrequire('./autoStart/hold');\n\n// actions\nrequire('./actions/gesture');\nrequire('./actions/resize');\nrequire('./actions/drag');\nrequire('./actions/drop');\n\n// load these modifiers after resize is loaded\nrequire('./modifiers/snapSize');\nrequire('./modifiers/restrictEdges');\nrequire('./modifiers/restrictSize');\n\n// autoStart actions\nrequire('./autoStart/gesture');\nrequire('./autoStart/resize');\nrequire('./autoStart/drag');\n\n// Interactable preventDefault setting\nrequire('./interactablePreventDefault.js');\n\n// autoScroll\nrequire('./autoScroll');\n\n// export interact\nmodule.exports = require('./interact');\n","const InteractEvent  = require('./InteractEvent');\nconst Interaction    = require('./Interaction');\nconst modifiers      = require('./modifiers/base');\nconst utils          = require('./utils');\nconst animationFrame = require('./utils/raf');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.inertiaStatus = {\n    active     : false,\n    smoothEnd  : false,\n    allowResume: false,\n\n    startEvent: null,\n    upCoords  : {},\n\n    xe: 0, ye: 0,\n    sx: 0, sy: 0,\n\n    t0: 0,\n    vx0: 0, vys: 0,\n    duration: 0,\n\n    lambda_v0: 0,\n    one_ve_v0: 0,\n    i  : null,\n  };\n\n  interaction.boundInertiaFrame   = () => inertiaFrame  .apply(interaction);\n  interaction.boundSmoothEndFrame = () => smoothEndFrame.apply(interaction);\n});\n\nInteraction.signals.on('down', function ({ interaction, event, pointer, eventTarget }) {\n  const status = interaction.inertiaStatus;\n\n  // Check if the down event hits the current inertia target\n  if (status.active) {\n    let element = eventTarget;\n\n    // climb up the DOM tree from the event target\n    while (utils.is.element(element)) {\n\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        animationFrame.cancel(status.i);\n        status.active = false;\n        interaction.simulation = null;\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer);\n        utils.setCoords(interaction.curCoords, interaction.pointers);\n\n        // fire appropriate signals\n        const signalArg = { interaction };\n        Interaction.signals.fire('before-action-move', signalArg);\n        Interaction.signals.fire('action-resume'     , signalArg);\n\n        // fire a reume event\n        const resumeEvent = new InteractEvent(interaction,\n                                              event,\n                                              interaction.prepared.name,\n                                              'inertiaresume',\n                                              interaction.element);\n\n        interaction.target.fire(resumeEvent);\n        interaction.prevEvent = resumeEvent;\n        modifiers.resetStatuses(interaction.modifierStatuses);\n\n        utils.copyCoords(interaction.prevCoords, interaction.curCoords);\n        break;\n      }\n\n      element = utils.parentNode(element);\n    }\n  }\n});\n\nInteraction.signals.on('up', function ({ interaction, event }) {\n  const status = interaction.inertiaStatus;\n\n  if (!interaction.interacting() || status.active) { return; }\n\n  const target = interaction.target;\n  const options = target && target.options;\n  const inertiaOptions = options && interaction.prepared.name && options[interaction.prepared.name].inertia;\n\n  const now = new Date().getTime();\n  const statuses = {};\n  const page = utils.extend({}, interaction.curCoords.page);\n  const pointerSpeed = interaction.pointerDelta.client.speed;\n\n  let smoothEnd = false;\n  let modifierResult;\n\n  // check if inertia should be started\n  const inertiaPossible = (inertiaOptions && inertiaOptions.enabled\n                     && interaction.prepared.name !== 'gesture'\n                     && event !== status.startEvent);\n\n  const inertia = (inertiaPossible\n    && (now - interaction.curCoords.timeStamp) < 50\n    && pointerSpeed > inertiaOptions.minSpeed\n    && pointerSpeed > inertiaOptions.endSpeed);\n\n  const modifierArg = {\n    interaction,\n    pageCoords: page,\n    statuses,\n    preEnd: true,\n    requireEndOnly: true,\n  };\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(modifierArg);\n\n    if (modifierResult.shouldMove && modifierResult.locked) {\n      smoothEnd = true;\n    }\n  }\n\n  if (!(inertia || smoothEnd)) { return; }\n\n  utils.copyCoords(status.upCoords, interaction.curCoords);\n\n  interaction.pointers[0] = status.startEvent =\n    new InteractEvent(interaction, event, interaction.prepared.name, 'inertiastart', interaction.element);\n\n  status.t0 = now;\n\n  status.active = true;\n  status.allowResume = inertiaOptions.allowResume;\n  interaction.simulation = status;\n\n  target.fire(status.startEvent);\n\n  if (inertia) {\n    status.vx0 = interaction.pointerDelta.client.vx;\n    status.vy0 = interaction.pointerDelta.client.vy;\n    status.v0 = pointerSpeed;\n\n    calcInertia(interaction, status);\n\n    utils.extend(page, interaction.curCoords.page);\n\n    page.x += status.xe;\n    page.y += status.ye;\n\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(modifierArg);\n\n    status.modifiedXe += modifierResult.dx;\n    status.modifiedYe += modifierResult.dy;\n\n    status.i = animationFrame.request(interaction.boundInertiaFrame);\n  }\n  else {\n    status.smoothEnd = true;\n    status.xe = modifierResult.dx;\n    status.ye = modifierResult.dy;\n\n    status.sx = status.sy = 0;\n\n    status.i = animationFrame.request(interaction.boundSmoothEndFrame);\n  }\n});\n\nInteraction.signals.on('stop-active', function ({ interaction }) {\n  const status = interaction.inertiaStatus;\n\n  if (status.active) {\n    animationFrame.cancel(status.i);\n    status.active = false;\n    interaction.simulation = null;\n  }\n});\n\nfunction calcInertia (interaction, status) {\n  const inertiaOptions = interaction.target.options[interaction.prepared.name].inertia;\n  const lambda = inertiaOptions.resistance;\n  const inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n  status.x0 = interaction.prevEvent.pageX;\n  status.y0 = interaction.prevEvent.pageY;\n  status.t0 = status.startEvent.timeStamp / 1000;\n  status.sx = status.sy = 0;\n\n  status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n  status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n  status.te = inertiaDur;\n\n  status.lambda_v0 = lambda / status.v0;\n  status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n}\n\nfunction inertiaFrame () {\n  updateInertiaCoords(this);\n  utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n  const status = this.inertiaStatus;\n  const options = this.target.options[this.prepared.name].inertia;\n  const lambda = options.resistance;\n  const t = new Date().getTime() / 1000 - status.t0;\n\n  if (t < status.te) {\n\n    const progress =  1 - (Math.exp(-lambda * t) - status.lambda_v0) / status.one_ve_v0;\n\n    if (status.modifiedXe === status.xe && status.modifiedYe === status.ye) {\n      status.sx = status.xe * progress;\n      status.sy = status.ye * progress;\n    }\n    else {\n      const quadPoint = utils.getQuadraticCurvePoint(0, 0,\n                                                     status.xe,\n                                                     status.ye,\n                                                     status.modifiedXe,\n                                                     status.modifiedYe,\n                                                     progress);\n\n      status.sx = quadPoint.x;\n      status.sy = quadPoint.y;\n    }\n\n    this.doMove();\n\n    status.i = animationFrame.request(this.boundInertiaFrame);\n  }\n  else {\n    status.sx = status.modifiedXe;\n    status.sy = status.modifiedYe;\n\n    this.doMove();\n    this.end(status.startEvent);\n    status.active = false;\n    this.simulation = null;\n  }\n\n  utils.copyCoords(this.prevCoords, this.curCoords);\n}\n\nfunction smoothEndFrame () {\n  updateInertiaCoords(this);\n\n  const status = this.inertiaStatus;\n  const t = new Date().getTime() - status.t0;\n  const duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n  if (t < duration) {\n    status.sx = utils.easeOutQuad(t, 0, status.xe, duration);\n    status.sy = utils.easeOutQuad(t, 0, status.ye, duration);\n\n    this.pointerMove(status.startEvent, status.startEvent);\n\n    status.i = animationFrame.request(this.boundSmoothEndFrame);\n  }\n  else {\n    status.sx = status.xe;\n    status.sy = status.ye;\n\n    this.pointerMove(status.startEvent, status.startEvent);\n    this.end(status.startEvent);\n\n    status.smoothEnd =\n      status.active = false;\n    this.simulation = null;\n  }\n}\n\nfunction updateInertiaCoords (interaction) {\n  const status = interaction.inertiaStatus;\n\n  // return if inertia isn't running\n  if (!status.active) { return; }\n\n  const pageUp   = status.upCoords.page;\n  const clientUp = status.upCoords.client;\n\n  utils.setCoords(interaction.curCoords, [ {\n    pageX  : pageUp.x   + status.sx,\n    pageY  : pageUp.y   + status.sy,\n    clientX: clientUp.x + status.sx,\n    clientY: clientUp.y + status.sy,\n  } ]);\n}\n","/** @module interact */\n\nconst browser      = require('./utils/browser');\nconst events       = require('./utils/events');\nconst utils        = require('./utils');\nconst scope        = require('./scope');\nconst Interactable = require('./Interactable');\nconst Interaction  = require('./Interaction');\n\nconst globalEvents = {};\n\n/**\n * ```js\n * interact('#draggable').draggable(true);\n *\n * var rectables = interact('rect');\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   });\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @global\n *\n * @param {Element | string} element The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */\nfunction interact (element, options) {\n  let interactable = scope.interactables.get(element, options);\n\n  if (!interactable) {\n    interactable = new Interactable(element, options);\n    interactable.events.global = globalEvents;\n  }\n\n  return interactable;\n}\n\n/**\n * Check if an element or selector has been set with the {@link interact}\n * function\n *\n * @alias module:interact.isSet\n *\n * @param {Element} element The Element being searched for\n * @return {boolean} Indicates if the element or CSS selector was previously\n * passed to interact\n*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/**\n * Add a global listener for an InteractEvent or adds a DOM event to `document`\n *\n * @alias module:interact.on\n *\n * @param {string | array | object} type The types of events to listen for\n * @param {function} listener The function event (s)\n * @param {object | boolean} [options] object or useCapture flag for\n * addEventListener\n * @return {object} interact\n */\ninteract.on = function (type, listener, options) {\n  if (utils.is.string(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.is.array(type)) {\n    for (const eventType of type) {\n      interact.on(eventType, listener, options);\n    }\n\n    return interact;\n  }\n\n  if (utils.is.object(type)) {\n    for (const prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(Interactable.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener];\n    }\n    else {\n      globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n    events.add(scope.document, type, listener, { options });\n  }\n\n  return interact;\n};\n\n/**\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n * @alias module:interact.off\n *\n * @param {string | array | object} type The types of events that were listened\n * for\n * @param {function} listener The listener function to be removed\n * @param {object | boolean} options [options] object or useCapture flag for\n * removeEventListener\n * @return {object} interact\n */\ninteract.off = function (type, listener, options) {\n  if (utils.is.string(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.is.array(type)) {\n    for (const eventType of type) {\n      interact.off(eventType, listener, options);\n    }\n\n    return interact;\n  }\n\n  if (utils.is.object(type)) {\n    for (const prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(Interactable.eventTypes, type)) {\n    events.remove(scope.document, type, listener, options);\n  }\n  else {\n    let index;\n\n    if (type in globalEvents\n        && (index = globalEvents[type].indexOf(listener)) !== -1) {\n      globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/**\n * Returns an object which exposes internal data\n\n * @alias module:interact.debug\n *\n * @return {object} An object with properties that outline the current state\n * and expose internal functions and variables\n */\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage  = utils.pointerAverage;\ninteract.getTouchBBox       = utils.touchBBox;\ninteract.getTouchDistance   = utils.touchDistance;\ninteract.getTouchAngle      = utils.touchAngle;\n\ninteract.getElementRect       = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector      = utils.matchesSelector;\ninteract.closest              = utils.closest;\n\n/**\n * @alias module:interact.supportsTouch\n *\n * @return {boolean} Whether or not the browser supports touch input\n */\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/**\n * @alias module:interact.supportsPointerEvent\n *\n * @return {boolean} Whether or not the browser supports PointerEvents\n */\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/**\n * Cancels all interactions (end events are not fired)\n *\n * @alias module:interact.stop\n *\n * @param {Event} event An event on which to call preventDefault()\n * @return {object} interact\n */\ninteract.stop = function (event) {\n  for (let i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/**\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n * @alias module:interact.pointerMoveTolerance\n *\n * @param {number} [newValue] The movement from the start position must be greater than this value\n * @return {interact | number}\n */\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.is.number(newValue)) {\n    Interaction.pointerMoveTolerance = newValue;\n\n    return interact;\n  }\n\n  return Interaction.pointerMoveTolerance;\n};\n\ninteract.addDocument    = scope.addDocument;\ninteract.removeDocument = scope.removeDocument;\n\nscope.interact = interact;\n\nmodule.exports = interact;\n","const Interactable = require('./Interactable');\nconst Interaction  = require('./Interaction');\nconst scope        = require('./scope');\nconst is           = require('./utils/is');\nconst events       = require('./utils/events');\nconst browser      = require('./utils/browser');\n\nconst { nodeContains, matchesSelector } = require('./utils/domUtils');\n\n/**\n * Returns or sets whether to prevent the browser's default behaviour in\n * response to pointer events. Can be set to:\n *  - `'always'` to always prevent\n *  - `'never'` to never prevent\n *  - `'auto'` to let interact.js try to determine what would be best\n *\n * @param {string} [newValue] `true`, `false` or `'auto'`\n * @return {string | Interactable} The current setting or this Interactable\n */\nInteractable.prototype.preventDefault = function (newValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue;\n    return this;\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue? 'always' : 'never';\n    return this;\n  }\n\n  return this.options.preventDefault;\n};\n\nInteractable.prototype.checkAndPreventDefault = function (event) {\n  const setting = this.options.preventDefault;\n\n  if (setting === 'never') { return; }\n\n  if (setting === 'always') {\n    event.preventDefault();\n    return;\n  }\n\n  // setting === 'auto'\n\n  // don't preventDefault of touch{start,move} events if the browser supports passive\n  // events listeners. CSS touch-action and user-selecct should be used instead\n  if (events.supportsPassive\n    && /^touch(start|move)$/.test(event.type)\n    && !browser.isIOS) {\n    return;\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return;\n  }\n\n  // don't preventDefault on editable elements\n  if (is.element(event.target)\n      && matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')) {\n    return;\n  }\n\n  event.preventDefault();\n};\n\nfunction onInteractionEvent ({ interaction, event }) {\n  if (interaction.target) {\n    interaction.target.checkAndPreventDefault(event);\n  }\n}\n\nfor (const eventSignal of ['down', 'move', 'up', 'cancel']) {\n  Interaction.signals.on(eventSignal, onInteractionEvent);\n}\n\n// prevent native HTML5 drag on interact.js target elements\nInteraction.docEvents.dragstart = function preventNativeDrag (event) {\n  for (const interaction of scope.interactions) {\n\n    if (interaction.element\n        && (interaction.element === event.target\n            || nodeContains(interaction.element, event.target))) {\n\n      interaction.target.checkAndPreventDefault(event);\n      return;\n    }\n  }\n};\n","const InteractEvent = require('../InteractEvent');\nconst Interaction   = require('../Interaction');\nconst extend        = require('../utils/extend');\n\nconst modifiers = {\n  names: [],\n\n  setOffsets: function (arg) {\n    const { interaction, pageCoords: page } = arg;\n    const { target, element, startOffset } = interaction;\n    const rect = target.getRect(element);\n\n    if (rect) {\n      startOffset.left = page.x - rect.left;\n      startOffset.top  = page.y - rect.top;\n\n      startOffset.right  = rect.right  - page.x;\n      startOffset.bottom = rect.bottom - page.y;\n\n      if (!('width'  in rect)) { rect.width  = rect.right  - rect.left; }\n      if (!('height' in rect)) { rect.height = rect.bottom - rect.top ; }\n    }\n    else {\n      startOffset.left = startOffset.top = startOffset.right = startOffset.bottom = 0;\n    }\n\n    arg.rect = rect;\n    arg.interactable = target;\n    arg.element = element;\n\n    for (const modifierName of modifiers.names) {\n      arg.options = target.options[interaction.prepared.name][modifierName];\n\n      if (!arg.options) {\n        continue;\n      }\n\n      interaction.modifierOffsets[modifierName] = modifiers[modifierName].setOffset(arg);\n    }\n  },\n\n  setAll: function (arg) {\n    const { interaction, statuses, preEnd, requireEndOnly } = arg;\n    const result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true,\n    };\n\n    arg.modifiedCoords = extend({}, arg.pageCoords);\n\n    for (const modifierName of modifiers.names) {\n      const modifier = modifiers[modifierName];\n      const options = interaction.target.options[interaction.prepared.name][modifierName];\n\n      if (!shouldDo(options, preEnd, requireEndOnly)) { continue; }\n\n      arg.status = arg.status = statuses[modifierName];\n      arg.options = options;\n      arg.offset = arg.interaction.modifierOffsets[modifierName];\n\n      modifier.set(arg);\n\n      if (arg.status.locked) {\n        arg.modifiedCoords.x += arg.status.dx;\n        arg.modifiedCoords.y += arg.status.dy;\n\n        result.dx += arg.status.dx;\n        result.dy += arg.status.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if:\n    //  - there are no modifiers enabled,\n    //  - no modifiers are \"locked\" i.e. have changed the pointer's coordinates, or\n    //  - the locked coords have changed since the last pointer move\n    result.shouldMove = !arg.status || !result.locked || arg.status.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (const modifierName of modifiers.names) {\n      const status = statuses[modifierName] || {};\n\n      status.dx = status.dy = 0;\n      status.modifiedX = status.modifiedY = NaN;\n      status.locked = false;\n      status.changed = true;\n\n      statuses[modifierName] = status;\n    }\n\n    return statuses;\n  },\n\n  start: function ({ interaction }, signalName) {\n    const arg = {\n      interaction,\n      pageCoords: (signalName === 'action-resume' ?\n                   interaction.curCoords : interaction.startCoords).page,\n      startOffset: interaction.startOffset,\n      statuses: interaction.modifierStatuses,\n      preEnd: false,\n      requireEndOnly: false,\n    };\n\n    modifiers.setOffsets(arg);\n    modifiers.resetStatuses(arg.statuses);\n\n    arg.pageCoords = extend({}, interaction.startCoords.page);\n    interaction.modifierResult = modifiers.setAll(arg);\n  },\n\n  beforeMove: function ({ interaction, preEnd, interactingBeforeMove }) {\n    const modifierResult = modifiers.setAll({\n      interaction,\n      preEnd,\n      pageCoords: interaction.curCoords.page,\n      statuses: interaction.modifierStatuses,\n      requireEndOnly: false,\n    });\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (!modifierResult.shouldMove && interactingBeforeMove) {\n      interaction._dontFireMove = true;\n    }\n\n    interaction.modifierResult = modifierResult;\n  },\n\n  end: function ({ interaction, event }) {\n    for (const modifierName of modifiers.names) {\n      const options = interaction.target.options[interaction.prepared.name][modifierName];\n\n      // if the endOnly option is true for any modifier\n      if (shouldDo(options, true, true)) {\n        // fire a move event at the modified coordinates\n        interaction.doMove({ event, preEnd: true });\n        break;\n      }\n    }\n  },\n\n  setXY: function (arg) {\n    const { iEvent, interaction } = arg;\n    const modifierArg = extend({}, arg);\n\n    for (let i = 0; i < modifiers.names.length; i++) {\n      const modifierName = modifiers.names[i];\n      modifierArg.options = interaction.target.options[interaction.prepared.name][modifierName];\n\n      if (!modifierArg.options) {\n        continue;\n      }\n\n      const modifier = modifiers[modifierName];\n\n      modifierArg.status = interaction.modifierStatuses[modifierName];\n\n      iEvent[modifierName] = modifier.modifyCoords(modifierArg);\n    }\n  },\n};\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.startOffset      = { left: 0, right: 0, top: 0, bottom: 0 };\n  interaction.modifierOffsets  = {};\n  interaction.modifierStatuses = modifiers.resetStatuses({});\n  interaction.modifierResult   = null;\n});\n\nInteraction.signals.on('action-start' , modifiers.start);\nInteraction.signals.on('action-resume', modifiers.start);\nInteraction.signals.on('before-action-move', modifiers.beforeMove);\nInteraction.signals.on('action-end', modifiers.end);\n\nInteractEvent.signals.on('set-xy', modifiers.setXY);\n\nfunction shouldDo (options, preEnd, requireEndOnly) {\n  return (options && options.enabled\n          && (preEnd || !options.endOnly)\n          && (!requireEndOnly || options.endOnly));\n}\n\nmodule.exports = modifiers;\n","const modifiers      = require('./base');\nconst utils          = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst restrict = {\n  defaults: {\n    enabled    : false,\n    endOnly    : false,\n    restriction: null,\n    elementRect: null,\n  },\n\n  setOffset: function ({ rect, startOffset, options }) {\n    const elementRect = options && options.elementRect;\n    const offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - (rect.width  * elementRect.left);\n      offset.top  = startOffset.top  - (rect.height * elementRect.top);\n\n      offset.right  = startOffset.right  - (rect.width  * (1 - elementRect.right));\n      offset.bottom = startOffset.bottom - (rect.height * (1 - elementRect.bottom));\n    }\n    else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function ({ modifiedCoords, interaction, status, options }) {\n    if (!options) { return status; }\n\n    const page = status.useStatusXY\n      ? { x: status.x, y: status.y }\n      : utils.extend({}, modifiedCoords);\n\n    const restriction = getRestrictionRect(options.restriction, interaction, page);\n\n    if (!restriction) { return status; }\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    const rect = restriction;\n    let modifiedX = page.x;\n    let modifiedY = page.y;\n\n    const offset = interaction.modifierOffsets.restrict;\n\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    if ('x' in restriction && 'y' in restriction) {\n      modifiedX = Math.max(Math.min(rect.x + rect.width  - offset.right , page.x), rect.x + offset.left);\n      modifiedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top );\n    }\n    else {\n      modifiedX = Math.max(Math.min(rect.right  - offset.right , page.x), rect.left + offset.left);\n      modifiedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top  + offset.top );\n    }\n\n    status.dx = modifiedX - page.x;\n    status.dy = modifiedY - page.y;\n\n    status.changed = status.modifiedX !== modifiedX || status.modifiedY !== modifiedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.modifiedX = modifiedX;\n    status.modifiedY = modifiedY;\n  },\n\n  modifyCoords: function ({ page, client, status, phase, options }) {\n    const elementRect = options && options.elementRect;\n\n    if (options && options.enabled\n        && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy,\n        };\n      }\n    }\n  },\n\n  getRestrictionRect,\n};\n\nfunction getRestrictionRect (value, interaction, page) {\n  if (utils.is.function(value)) {\n    return utils.resolveRectLike(value, interaction.target, interaction.element, [page.x, page.y, interaction]);\n  } else {\n    return utils.resolveRectLike(value, interaction.target, interaction.element);\n  }\n}\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n","// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// });\n\nconst modifiers      = require('./base');\nconst utils          = require('../utils');\nconst rectUtils      = require('../utils/rect');\nconst defaultOptions = require('../defaultOptions');\nconst resize         = require('../actions/resize');\n\nconst { getRestrictionRect } = require('./restrict');\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity };\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity };\n\nconst restrictEdges = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    min: null,\n    max: null,\n    offset: null,\n  },\n\n  setOffset: function ({ interaction, startOffset, options }) {\n    if (!options) {\n      return utils.extend({}, startOffset);\n    }\n\n    const offset = getRestrictionRect(options.offset, interaction, interaction.startCoords.page);\n\n    if (offset) {\n      return {\n        top:    startOffset.top    + offset.y,\n        left:   startOffset.left   + offset.x,\n        bottom: startOffset.bottom + offset.y,\n        right:  startOffset.right  + offset.x,\n      };\n    }\n\n    return startOffset;\n  },\n\n  set: function ({ modifiedCoords, interaction, status, offset, options }) {\n    const edges = interaction.prepared.linkedEdges || interaction.prepared.edges;\n\n    if (!interaction.interacting() || !edges) {\n      return;\n    }\n\n    const page = status.useStatusXY\n      ? { x: status.x, y: status.y }\n      : utils.extend({}, modifiedCoords);\n    const inner = rectUtils.xywhToTlbr(getRestrictionRect(options.inner, interaction, page)) || noInner;\n    const outer = rectUtils.xywhToTlbr(getRestrictionRect(options.outer, interaction, page)) || noOuter;\n\n    let modifiedX = page.x;\n    let modifiedY = page.y;\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    if (edges.top) {\n      modifiedY = Math.min(Math.max(outer.top    + offset.top,    page.y), inner.top    + offset.top);\n    }\n    else if (edges.bottom) {\n      modifiedY = Math.max(Math.min(outer.bottom - offset.bottom, page.y), inner.bottom - offset.bottom);\n    }\n    if (edges.left) {\n      modifiedX = Math.min(Math.max(outer.left   + offset.left,   page.x), inner.left   + offset.left);\n    }\n    else if (edges.right) {\n      modifiedX = Math.max(Math.min(outer.right  - offset.right,  page.x), inner.right  - offset.right);\n    }\n\n    status.dx = modifiedX - page.x;\n    status.dy = modifiedY - page.y;\n\n    status.changed = status.modifiedX !== modifiedX || status.modifiedY !== modifiedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.modifiedX = modifiedX;\n    status.modifiedY = modifiedY;\n  },\n\n  modifyCoords: function ({ page, client, status, phase, options }) {\n    if (options && options.enabled\n        && !(phase === 'start' && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy,\n        };\n      }\n    }\n  },\n\n  noInner,\n  noOuter,\n  getRestrictionRect,\n};\n\nmodifiers.restrictEdges = restrictEdges;\nmodifiers.names.push('restrictEdges');\n\ndefaultOptions.perAction.restrictEdges = restrictEdges.defaults;\nresize.defaults.restrictEdges          = restrictEdges.defaults;\n\nmodule.exports = restrictEdges;\n","// This module adds the options.resize.restrictSize setting which sets min and\n// max width and height for the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictSize: {\n//     min: { width: -600, height: -600 },\n//     max: { width:  600, height:  600 },\n//   },\n// });\n\nconst modifiers      = require('./base');\nconst restrictEdges  = require('./restrictEdges');\nconst utils          = require('../utils');\nconst rectUtils      = require('../utils/rect');\nconst defaultOptions = require('../defaultOptions');\nconst resize         = require('../actions/resize');\n\nconst noMin = { width: -Infinity, height: -Infinity };\nconst noMax = { width: +Infinity, height: +Infinity };\n\nconst restrictSize = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    min: null,\n    max: null,\n  },\n\n  setOffset: function ({ interaction }) {\n    return interaction.startOffset;\n  },\n\n  set: function (arg) {\n    const { interaction, options } = arg;\n    const edges = interaction.prepared.linkedEdges || interaction.prepared.edges;\n\n    if (!interaction.interacting() || !edges) {\n      return;\n    }\n\n    const rect = rectUtils.xywhToTlbr(interaction.resizeRects.inverted);\n\n    const minSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.min, interaction)) || noMin;\n    const maxSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.max, interaction)) || noMax;\n\n    arg.options = {\n      enabled: options.enabled,\n      endOnly: options.endOnly,\n      inner: utils.extend({}, restrictEdges.noInner),\n      outer: utils.extend({}, restrictEdges.noOuter),\n    };\n\n    if (edges.top) {\n      arg.options.inner.top = rect.bottom - minSize.height;\n      arg.options.outer.top = rect.bottom - maxSize.height;\n    }\n    else if (edges.bottom) {\n      arg.options.inner.bottom = rect.top + minSize.height;\n      arg.options.outer.bottom = rect.top + maxSize.height;\n    }\n    if (edges.left) {\n      arg.options.inner.left = rect.right - minSize.width;\n      arg.options.outer.left = rect.right - maxSize.width;\n    }\n    else if (edges.right) {\n      arg.options.inner.right = rect.left + minSize.width;\n      arg.options.outer.right = rect.left + maxSize.width;\n    }\n\n    restrictEdges.set(arg);\n  },\n\n  modifyCoords: restrictEdges.modifyCoords,\n};\n\nmodifiers.restrictSize = restrictSize;\nmodifiers.names.push('restrictSize');\n\ndefaultOptions.perAction.restrictSize = restrictSize.defaults;\nresize.defaults.restrictSize          = restrictSize.defaults;\n\nmodule.exports = restrictSize;\n","const modifiers      = require('./base');\nconst interact       = require('../interact');\nconst utils          = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range  : Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null,\n  },\n\n  setOffset: function ({ interaction, interactable, element, rect, startOffset, options }) {\n    const offsets = [];\n    const optionsOrigin = utils.rectToXY(utils.resolveRectLike(options.origin));\n    const origin = optionsOrigin || utils.getOriginXY(interactable, element, interaction.prepared.name);\n    options = options || interactable.options[interaction.prepared.name].snap || {};\n\n    let snapOffset;\n\n    if (options.offset === 'startCoords') {\n      snapOffset = {\n        x: interaction.startCoords.page.x - origin.x,\n        y: interaction.startCoords.page.y - origin.y,\n      };\n    }\n    else  {\n      const offsetRect = utils.resolveRectLike(options.offset, interactable, element, [interaction]);\n\n      snapOffset = utils.rectToXY(offsetRect) || { x: 0, y: 0 };\n    }\n\n    if (rect && options.relativePoints && options.relativePoints.length) {\n      for (const { x: relativeX, y: relativeY } of options.relativePoints) {\n        offsets.push({\n          x: startOffset.left - (rect.width  * relativeX) + snapOffset.x,\n          y: startOffset.top  - (rect.height * relativeY) + snapOffset.y,\n        });\n      }\n    }\n    else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function ({ interaction, modifiedCoords, status, options, offset: offsets }) {\n    const targets = [];\n    let target;\n    let page;\n    let i;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    }\n    else {\n      const origin = utils.getOriginXY(interaction.target, interaction.element, interaction.prepared.name);\n\n      page = utils.extend({}, modifiedCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    let len = options.targets? options.targets.length : 0;\n\n    for (const { x: offsetX, y: offsetY } of offsets) {\n      const relativeX = page.x - offsetX;\n      const relativeY = page.y - offsetY;\n\n      for (const snapTarget of (options.targets || [])) {\n        if (utils.is.function(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        }\n        else {\n          target = snapTarget;\n        }\n\n        if (!target) { continue; }\n\n        targets.push({\n          x: utils.is.number(target.x) ? (target.x + offsetX) : relativeX,\n          y: utils.is.number(target.y) ? (target.y + offsetY) : relativeY,\n\n          range: utils.is.number(target.range)? target.range: options.range,\n        });\n      }\n    }\n\n    const closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0,\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      const range = target.range;\n      const dx = target.x - page.x;\n      const dy = target.y - page.y;\n      const distance = utils.hypot(dx, dy);\n      let inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n          // is the closest target in range?\n          ? (closest.inRange && range !== Infinity\n          // the pointer is relatively deeper in this target\n          ? distance / range < closest.distance / closest.range\n          // this target has Infinite range and the closest doesn't\n          : (range === Infinity && closest.range !== Infinity)\n          // OR this target is closer that the previous closest\n        || distance < closest.distance)\n          // The other is not in range and the pointer is closer to this target\n          : (!closest.inRange && distance < closest.distance))) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    let snapChanged;\n\n    if (closest.target) {\n      snapChanged = (status.modifiedX !== closest.target.x || status.modifiedY !== closest.target.y);\n\n      status.modifiedX = closest.target.x;\n      status.modifiedY = closest.target.y;\n    }\n    else {\n      snapChanged = true;\n\n      status.modifiedX = NaN;\n      status.modifiedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = (snapChanged || (closest.inRange && !status.locked));\n    status.locked = closest.inRange;\n  },\n\n  modifyCoords: function ({ page, client, status, phase, options }) {\n    const relativePoints = options && options.relativePoints;\n\n    if (options && options.enabled\n        && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range  : status.range,\n        locked : status.locked,\n        x      : status.modifiedX,\n        y      : status.modifiedY,\n        realX  : status.realX,\n        realY  : status.realY,\n        dx     : status.dx,\n        dy     : status.dy,\n      };\n    }\n  },\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    const limits = grid.limits || {\n      left  : -Infinity,\n      right :  Infinity,\n      top   : -Infinity,\n      bottom:  Infinity,\n    };\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (utils.is.object(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    const gridx = Math.round((x - offsetX) / grid.x);\n    const gridy = Math.round((y - offsetY) / grid.y);\n\n    const newX = Math.max(limits.left, Math.min(limits.right , gridx * grid.x + offsetX));\n    const newY = Math.max(limits.top , Math.min(limits.bottom, gridy * grid.y + offsetY));\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range,\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n","// This module allows snapping of the size of targets during resize\n// interactions.\n\nconst modifiers      = require('./base');\nconst snap           = require('./snap');\nconst defaultOptions = require('../defaultOptions');\nconst resize         = require('../actions/resize');\nconst utils          = require('../utils/');\n\nconst snapSize = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range  : Infinity,\n    targets: null,\n    offsets: null,\n  },\n\n  setOffset: function (arg) {\n    const { interaction, options } = arg;\n    const edges = interaction.prepared.edges;\n\n    if (!edges) { return; }\n\n    arg.options = {\n      relativePoints: [{\n        x: edges.left? 0 : 1,\n        y: edges.top ? 0 : 1,\n      }],\n      origin: { x: 0, y: 0 },\n      offset: 'self',\n      range: options.range,\n    };\n\n    const offsets = snap.setOffset(arg);\n    arg.options = options;\n\n    return offsets;\n  },\n\n  set: function (arg) {\n    const { interaction, options, offset, modifiedCoords } = arg;\n    const page = utils.extend({}, modifiedCoords);\n    const relativeX = page.x - offset[0].x;\n    const relativeY = page.y - offset[0].y;\n\n    arg.options = utils.extend({}, options);\n    arg.options.targets = [];\n\n    for (const snapTarget of (options.targets || [])) {\n      let target;\n\n      if (utils.is.function(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction);\n      }\n      else {\n        target = snapTarget;\n      }\n\n      if (!target) { continue; }\n\n      if ('width' in target && 'height' in target) {\n        target.x = target.width;\n        target.y = target.height;\n      }\n\n      arg.options.targets.push(target);\n    }\n\n    snap.set(arg);\n  },\n\n  modifyCoords: function (arg) {\n    const { options } = arg;\n\n    arg.options = utils.extend({}, options);\n    arg.options.enabled = options.enabled;\n    arg.options.relativePoints = [null];\n\n    snap.modifyCoords(arg);\n  },\n};\n\nmodifiers.snapSize = snapSize;\nmodifiers.names.push('snapSize');\n\ndefaultOptions.perAction.snapSize = snapSize.defaults;\nresize.defaults.snapSize          = snapSize.defaults;\n\nmodule.exports = snapSize;\n","const pointerUtils = require('../utils/pointerUtils');\n\nmodule.exports = class PointerEvent {\n  /** */\n  constructor (type, pointer, event, eventTarget, interaction) {\n    pointerUtils.pointerExtend(this, event);\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer);\n    }\n\n    this.interaction = interaction;\n\n    this.timeStamp     = new Date().getTime();\n    this.originalEvent = event;\n    this.type          = type;\n    this.pointerId     = pointerUtils.getPointerId(pointer);\n    this.pointerType   = pointerUtils.getPointerType(pointer);\n    this.target        = eventTarget;\n    this.currentTarget = null;\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer);\n      this.dt = this.timeStamp - interaction.downTimes[pointerIndex];\n\n      const interval = this.timeStamp - interaction.tapTime;\n\n      this.double = !!(interaction.prevTap\n        && interaction.prevTap.type !== 'doubletap'\n        && interaction.prevTap.target === this.target\n        && interval < 500);\n    }\n    else if (type === 'doubletap') {\n      this.dt = pointer.timeStamp - interaction.tapTime;\n    }\n  }\n\n  subtractOrigin ({ x: originX, y: originY }) {\n    this.pageX   -= originX;\n    this.pageY   -= originY;\n    this.clientX -= originX;\n    this.clientY -= originY;\n\n    return this;\n  }\n\n  addOrigin ({ x: originX, y: originY }) {\n    this.pageX   += originX;\n    this.pageY   += originY;\n    this.clientX += originX;\n    this.clientY += originY;\n\n    return this;\n  }\n\n  /** */\n  preventDefault () {\n    this.originalEvent.preventDefault();\n  }\n\n  /** */\n  stopPropagation () {\n    this.propagationStopped = true;\n  }\n\n  /** */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n};\n","const PointerEvent = require('./PointerEvent');\nconst Interaction  = require('../Interaction');\nconst utils        = require('../utils');\nconst defaults     = require('../defaultOptions');\nconst signals      = require('../utils/Signals').new();\n\nconst simpleSignals = [ 'down', 'up', 'cancel' ];\nconst simpleEvents  = [ 'down', 'up', 'cancel' ];\n\nconst pointerEvents = {\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  signals,\n  defaults: {\n    holdDuration: 600,\n    ignoreFrom  : null,\n    allowFrom   : null,\n    origin      : { x: 0, y: 0 },\n  },\n  types: [\n    'down',\n    'move',\n    'up',\n    'cancel',\n    'tap',\n    'doubletap',\n    'hold',\n  ],\n};\n\nfunction fire (arg) {\n  const {\n    interaction, pointer, event, eventTarget,\n    type = arg.pointerEvent.type,\n    targets = collectEventTargets(arg),\n    pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction),\n  } = arg;\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  };\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n\n    for (const prop in target.props || {}) {\n      pointerEvent[prop] = target.props[prop];\n    }\n\n    const origin = utils.getOriginXY(target.eventable, target.element);\n\n    pointerEvent.subtractOrigin(origin);\n    pointerEvent.eventable = target.eventable;\n    pointerEvent.currentTarget = target.element;\n\n    target.eventable.fire(pointerEvent);\n\n    pointerEvent.addOrigin(origin);\n\n    if (pointerEvent.immediatePropagationStopped\n        || (pointerEvent.propagationStopped\n            && (i + 1) < targets.length && targets[i + 1].element !== pointerEvent.currentTarget)) {\n      break;\n    }\n  }\n\n  signals.fire('fired', signalArg);\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire({\n        interaction, pointer, event, eventTarget,\n        type: 'doubletap',\n      })\n      : pointerEvent;\n\n    interaction.prevTap = prevTap;\n    interaction.tapTime = prevTap.timeStamp;\n  }\n\n  return pointerEvent;\n}\n\nfunction collectEventTargets ({ interaction, pointer, event, eventTarget, type }) {\n  const pointerIndex = interaction.getPointerIndex(pointer);\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (type === 'tap' && (interaction.pointerWasMoved\n      // or if the pointerup target is different to the pointerdown target\n      || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return [];\n  }\n\n  const path = utils.getPath(eventTarget);\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [],\n    element: null,\n  };\n\n  for (const element of path) {\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(target =>\n      target.eventable.options.holdDuration === interaction.holdTimers[pointerIndex].duration);\n  }\n\n  return signalArg.targets;\n}\n\nInteraction.signals.on('update-pointer-down', function ({ interaction, pointerIndex }) {\n  interaction.holdTimers[pointerIndex] = { duration: Infinity, timeout: null };\n});\n\nInteraction.signals.on('remove-pointer', function ({ interaction, pointerIndex }) {\n  interaction.holdTimers.splice(pointerIndex, 1);\n});\n\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget, duplicateMove }) {\n  const pointerIndex = interaction.getPointerIndex(pointer);\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex].timeout);\n    }\n\n    fire({\n      interaction, pointer, event, eventTarget,\n      type: 'move',\n    });\n  }\n});\n\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget, pointerIndex }) {\n  const timer = interaction.holdTimers[pointerIndex];\n  const path = utils.getPath(eventTarget);\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [],\n    path,\n    element: null,\n  };\n\n  for (const element of path) {\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  if (!signalArg.targets.length) { return; }\n\n  let minDuration = Infinity;\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration;\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration;\n    }\n  }\n\n  timer.duration = minDuration;\n  timer.timeout = setTimeout(function () {\n    fire({\n      interaction,\n      eventTarget,\n      pointer,\n      event,\n      type: 'hold',\n    });\n  }, minDuration);\n});\n\nInteraction.signals.on('up', ({ interaction, pointer, event, eventTarget }) => {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' });\n  }\n});\n\nfor (const signalName of ['up', 'cancel']) {\n  Interaction.signals.on(signalName, function ({ interaction, pointerIndex }) {\n    if (interaction.holdTimers[pointerIndex]) {\n      clearTimeout(interaction.holdTimers[pointerIndex].timeout);\n    }\n  });\n}\n\nfunction createSignalListener (type) {\n  return function ({ interaction, pointer, event, eventTarget }) {\n    fire({ interaction, eventTarget, pointer, event, type });\n  };\n}\n\nfor (let i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap    = null;  // the most recent tap event on this interaction\n  interaction.tapTime    = 0;     // time of the most recent tap event\n  interaction.holdTimers = [];    // [{ duration, timeout }]\n});\n\ndefaults.pointerEvents = pointerEvents.defaults;\nmodule.exports = pointerEvents;\n","const pointerEvents = require('./base');\nconst Interaction   = require('../Interaction');\n\npointerEvents.signals.on('new', onNew);\npointerEvents.signals.on('fired', onFired);\n\nfor (const signal of ['move', 'up', 'cancel', 'endall']) {\n  Interaction.signals.on(signal, endHoldRepeat);\n}\n\nfunction onNew ({ pointerEvent }) {\n  if (pointerEvent.type !== 'hold') { return; }\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1;\n}\n\nfunction onFired ({ interaction, pointerEvent, eventTarget, targets }) {\n  if (pointerEvent.type !== 'hold' || !targets.length) { return; }\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval;\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) { return; }\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(function () {\n    pointerEvents.fire({\n      interaction,\n      eventTarget,\n      type: 'hold',\n      pointer: pointerEvent,\n      event: pointerEvent,\n    });\n  }, interval);\n}\n\nfunction endHoldRepeat ({ interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle);\n    interaction.holdIntervalHandle = null;\n  }\n}\n\n// don't repeat by default\npointerEvents.defaults.holdRepeatInterval = 0;\npointerEvents.types.push('holdrepeat');\n\nmodule.exports = {\n  onNew,\n  onFired,\n  endHoldRepeat,\n};\n","const pointerEvents = require('./base');\nconst Interactable  = require('../Interactable');\nconst is            = require('../utils/is');\nconst scope         = require('../scope');\nconst extend        = require('../utils/extend');\nconst { merge }     = require('../utils/arr');\n\npointerEvents.signals.on('collect-targets', function ({ targets, element, type, eventTarget }) {\n  scope.interactables.forEachMatch(element, interactable => {\n    const eventable = interactable.events;\n    const options = eventable.options;\n\n    if (eventable[type]\n      && is.element(element)\n      && interactable.testIgnoreAllow(options, element, eventTarget)) {\n\n      targets.push({\n        element,\n        eventable,\n        props: { interactable },\n      });\n    }\n  });\n});\n\nInteractable.signals.on('new', function ({ interactable }) {\n  interactable.events.getRect = function (element) {\n    return interactable.getRect(element);\n  };\n});\n\nInteractable.signals.on('set', function ({ interactable, options }) {\n  extend(interactable.events.options, pointerEvents.defaults);\n  extend(interactable.events.options, options);\n});\n\nmerge(Interactable.eventTypes, pointerEvents.types);\n\nInteractable.prototype.pointerEvents = function (options) {\n  extend(this.events.options, options);\n\n  return this;\n};\n\nconst __backCompatOption = Interactable.prototype._backCompatOption;\n\nInteractable.prototype._backCompatOption = function (optionName, newValue) {\n  const ret = __backCompatOption.call(this, optionName, newValue);\n\n  if (ret === this) {\n    this.events.options[optionName] = newValue;\n  }\n\n  return ret;\n};\n\nInteractable.settingsMethods.push('pointerEvents');\n","const utils   = require('./utils');\nconst events  = require('./utils/events');\nconst signals = require('./utils/Signals').new();\n\nconst { getWindow } = require('./utils/window');\n\nconst scope = {\n  signals,\n  events,\n  utils,\n\n  // main document\n  document: require('./utils/domObjects').document,\n  // all documents being listened to\n  documents: [],\n\n  addDocument: function (doc, win) {\n    // do nothing if document is already known\n    if (utils.contains(scope.documents, doc)) { return false; }\n\n    win = win || getWindow(doc);\n\n    scope.documents.push(doc);\n    events.documents.push(doc);\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== scope.document) {\n      events.add(win, 'unload', scope.onWindowUnload);\n    }\n\n    signals.fire('add-document', { doc, win });\n  },\n\n  removeDocument: function (doc, win) {\n    const index = scope.documents.indexOf(doc);\n\n    win = win || getWindow(doc);\n\n    events.remove(win, 'unload', scope.onWindowUnload);\n\n    scope.documents.splice(index, 1);\n    events.documents.splice(index, 1);\n\n    signals.fire('remove-document', { win, doc });\n  },\n\n  onWindowUnload: function () {\n    scope.removeDocument(this.document, this);\n  },\n};\n\nmodule.exports = scope;\n","class Signals {\n  constructor () {\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  on (name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  }\n\n  off (name, listener) {\n    if (!this.listeners[name]) { return; }\n\n    const index = this.listeners[name].indexOf(listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  }\n\n  fire (name, arg) {\n    const targetListeners = this.listeners[name];\n\n    if (!targetListeners) { return; }\n\n    for (const listener of targetListeners) {\n      if (listener(arg, name) === false) {\n        return;\n      }\n    }\n  }\n}\n\nSignals.new = function () {\n  return new Signals();\n};\n\nmodule.exports = Signals;\n","function contains (array, target) {\n  return array.indexOf(target) !== -1;\n}\n\nfunction merge (target, source) {\n  for (const item of source) {\n    target.push(item);\n  }\n\n  return target;\n}\n\nmodule.exports = {\n  contains,\n  merge,\n};\n","const { window } = require('./window');\nconst is     = require('./is');\nconst domObjects = require('./domObjects');\n\nconst Element = domObjects.Element;\nconst navigator  = window.navigator;\n\nconst browser = {\n  // Does the browser support touch input?\n  supportsTouch: !!(('ontouchstart' in window) || is.function(window.DocumentTouch)\n                     && domObjects.document instanceof window.DocumentTouch),\n\n  // Does the browser support PointerEvents\n  supportsPointerEvent: !!domObjects.PointerEvent,\n\n  isIOS: (/iP(hone|od|ad)/.test(navigator.platform)),\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  isIOS7: (/iP(hone|od|ad)/.test(navigator.platform)\n           && /OS 7[^\\d]/.test(navigator.appVersion)),\n\n  isIe9: /MSIE 9/.test(navigator.userAgent),\n\n  // prefix matchesSelector\n  prefixedMatchesSelector: 'matches' in Element.prototype\n    ? 'matches': 'webkitMatchesSelector' in Element.prototype\n    ? 'webkitMatchesSelector': 'mozMatchesSelector' in Element.prototype\n    ? 'mozMatchesSelector': 'oMatchesSelector' in Element.prototype\n    ? 'oMatchesSelector': 'msMatchesSelector',\n\n  pEventTypes: (domObjects.PointerEvent\n    ? (domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up:     'MSPointerUp',\n        down:   'MSPointerDown',\n        over:   'mouseover',\n        out:    'mouseout',\n        move:   'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up:     'pointerup',\n        down:   'pointerdown',\n        over:   'pointerover',\n        out:    'pointerout',\n        move:   'pointermove',\n        cancel: 'pointercancel',\n      })\n    : null),\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  wheelEvent: 'onmousewheel' in domObjects.document? 'mousewheel': 'wheel',\n\n};\n\n// Opera Mobile must be handled differently\nbrowser.isOperaMobile = (navigator.appName === 'Opera'\n  && browser.supportsTouch\n  && navigator.userAgent.match('Presto'));\n\nmodule.exports = browser;\n","const is = require('./is');\n\nmodule.exports = function clone (source) {\n  const dest = {};\n  for (const prop in source) {\n    if (is.plainObject(source[prop])) {\n      dest[prop] = clone(source[prop]);\n    } else {\n      dest[prop] = source[prop];\n    }\n  }\n  return dest;\n};\n","const domObjects = {};\nconst win = require('./window').window;\n\nfunction blank () {}\n\ndomObjects.document           = win.document;\ndomObjects.DocumentFragment   = win.DocumentFragment   || blank;\ndomObjects.SVGElement         = win.SVGElement         || blank;\ndomObjects.SVGSVGElement      = win.SVGSVGElement      || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.Element            = win.Element            || blank;\ndomObjects.HTMLElement        = win.HTMLElement        || domObjects.Element;\n\ndomObjects.Event        = win.Event;\ndomObjects.Touch        = win.Touch || blank;\ndomObjects.PointerEvent = (win.PointerEvent || win.MSPointerEvent);\n\nmodule.exports = domObjects;\n","const win        = require('./window');\nconst browser    = require('./browser');\nconst is         = require('./is');\nconst domObjects = require('./domObjects');\n\nconst domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (element, selector) {\n    while (is.element(element)) {\n      if (domUtils.matchesSelector(element, selector)) { return element; }\n\n      element = domUtils.parentNode(element);\n    }\n\n    return null;\n  },\n\n  parentNode: function (node) {\n    let parent = node.parentNode;\n\n    if (is.docFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && is.docFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  matchesSelector: function (element, selector) {\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    let deepestZoneParents = [];\n    let dropzoneParents = [];\n    let dropzone;\n    let deepestZone = elements[0];\n    let index = deepestZone? 0: -1;\n    let parent;\n    let child;\n    let i;\n    let n;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement\n          && dropzone instanceof domObjects.SVGElement\n          && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      }\n      else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      const parents = [\n        dropzoneParents[n - 1],\n        dropzoneParents[n],\n        deepestZoneParents[n],\n      ];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        }\n        else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (is.element(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentNode(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return (element instanceof domObjects.SVGElementInstance\n      ? element.correspondingUseElement\n      : element);\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n    };\n  },\n\n  getElementClientRect: function (element) {\n    const clientRect = (element instanceof domObjects.SVGElement\n      ? element.getBoundingClientRect()\n      : element.getClientRects()[0]);\n\n    return clientRect && {\n      left  : clientRect.left,\n      right : clientRect.right,\n      top   : clientRect.top,\n      bottom: clientRect.bottom,\n      width : clientRect.width  || clientRect.right  - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    };\n  },\n\n  getElementRect: function (element) {\n    const clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      const scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left   += scroll.x;\n      clientRect.right  += scroll.x;\n      clientRect.top    += scroll.y;\n      clientRect.bottom += scroll.y;\n    }\n\n    return clientRect;\n  },\n\n  getPath: function (element) {\n    const path = [];\n\n    while (element) {\n      path.push(element);\n      element = domUtils.parentNode(element);\n    }\n\n    return path;\n  },\n\n  trySelector: value => {\n    if (!is.string(value)) { return false; }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  },\n};\n\nmodule.exports = domUtils;\n","const is           = require('./is');\nconst domUtils     = require('./domUtils');\nconst pointerUtils = require('./pointerUtils');\nconst pExtend      = require('./pointerExtend');\n\nconst { window }   = require('./window');\nconst { contains } = require('./arr');\n\nconst elements = [];\nconst targets  = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, capture, passive], ...]\n//   }\n//  }\nconst delegatedEvents = {};\nconst documents       = [];\n\nconst supportsOptions = (() => {\n  let supported = false;\n\n  window.document.createElement('div').addEventListener('test', null, {\n    get capture () { supported = true; },\n  });\n\n  return supported;\n})();\n\nfunction add (element, type, listener, optionalArg) {\n  const options = getOptions(optionalArg);\n  let elementIndex = elements.indexOf(element);\n  let target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0,\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    element.addEventListener(type, listener, supportsOptions? options : !!options.capture);\n    target.events[type].push(listener);\n  }\n}\n\nfunction remove (element, type, listener, optionalArg) {\n  const options = getOptions(optionalArg);\n  const elementIndex = elements.indexOf(element);\n  const target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    const len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (let i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], options);\n      }\n      return;\n    }\n    else {\n      for (let i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element.removeEventListener(`on${type}`, listener, supportsOptions? options : !!options.capture);\n          target.events[type].splice(i, 1);\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate (selector, context, type, listener, optionalArg) {\n  const options = getOptions(optionalArg);\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts : [],\n      listeners: [],\n    };\n\n    // add delegate listener functions\n    for (const doc of documents) {\n      add(doc, type, delegateListener);\n      add(doc, type, delegateUseCapture, true);\n    }\n  }\n\n  const delegated = delegatedEvents[type];\n  let index;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts .push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and capture and passive flags\n  delegated.listeners[index].push([listener, !!options.capture, options.passive]);\n}\n\nfunction removeDelegate (selector, context, type, listener, optionalArg) {\n  const options = getOptions(optionalArg);\n  const delegated = delegatedEvents[type];\n  let matchFound = false;\n  let index;\n\n  if (!delegated) { return; }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n\n      const listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, capture, passive]\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const [fn, capture, passive] = listeners[i];\n\n        // check if the listener functions and capture and passive flags match\n        if (fn === listener && capture === !!options.capture && passive === options.passive) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts .splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) { break; }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener (event, optionalArg) {\n  const options = getOptions(optionalArg);\n  const fakeEvent = {};\n  const delegated = delegatedEvents[event.type];\n  const [eventTarget] = (pointerUtils.getEventTargets(event));\n  let element = eventTarget;\n\n  // duplicate the event so that currentTarget can be changed\n  pExtend(fakeEvent, event);\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (is.element(element)) {\n    for (let i = 0; i < delegated.selectors.length; i++) {\n      const selector = delegated.selectors[i];\n      const context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector)\n          && domUtils.nodeContains(context, eventTarget)\n          && domUtils.nodeContains(context, element)) {\n\n        const listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (let j = 0; j < listeners.length; j++) {\n          const [fn, capture, passive] = listeners[j];\n\n          if (capture === !!options.capture && passive === options.passive) {\n            fn(fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element);\n  }\n}\n\nfunction delegateUseCapture (event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction getOptions (param) {\n  return is.object(param)? param : { capture: param };\n}\n\nmodule.exports = {\n  add,\n  remove,\n\n  addDelegate,\n  removeDelegate,\n\n  delegateListener,\n  delegateUseCapture,\n  delegatedEvents,\n  documents,\n\n  supportsOptions,\n\n  _elements: elements,\n  _targets: targets,\n};\n","module.exports = function extend (dest, source) {\n  for (const prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n","const {\n  resolveRectLike,\n  rectToXY,\n} = require('./rect');\n\nmodule.exports = function (target, element, action) {\n  const actionOptions = target.options[action];\n  const actionOrigin = actionOptions && actionOptions.origin;\n  const origin = actionOrigin || target.options.origin;\n\n  const originRect = resolveRectLike(origin, target, element, [target && element]);\n\n  return rectToXY(originRect) || { x: 0, y: 0 };\n};\n","module.exports = (x, y) =>  Math.sqrt(x * x + y * y);\n","const extend = require('./extend');\nconst win    = require('./window');\n\nconst utils = {\n  warnOnce: function (method, message) {\n    let warned = false;\n\n    return function () {\n      if (!warned) {\n        win.window.console.warn(message);\n        warned = true;\n      }\n\n      return method.apply(this, arguments);\n    };\n  },\n\n  // http://stackoverflow.com/a/5634528/2280888\n  _getQBezierValue: function (t, p1, p2, p3) {\n    const iT = 1 - t;\n    return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n  },\n\n  getQuadraticCurvePoint: function (startX, startY, cpX, cpY, endX, endY, position) {\n    return {\n      x:  utils._getQBezierValue(position, startX, cpX, endX),\n      y:  utils._getQBezierValue(position, startY, cpY, endY),\n    };\n  },\n\n  // http://gizma.com/easing/\n  easeOutQuad: function (t, b, c, d) {\n    t /= d;\n    return -c * t*(t-2) + b;\n  },\n\n  copyAction: function (dest, src) {\n    dest.name  = src.name;\n    dest.axis  = src.axis;\n    dest.edges = src.edges;\n\n    return dest;\n  },\n\n  is         : require('./is'),\n  extend     : extend,\n  hypot      : require('./hypot'),\n  getOriginXY: require('./getOriginXY'),\n};\n\nextend(utils, require('./arr'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\nextend(utils, require('./rect'));\n\nmodule.exports = utils;\n","const scope   = require('../scope');\nconst utils   = require('./index');\n\nconst finder = {\n  methodOrder: [ 'simulationResume', 'mouseOrPen', 'hasPointer', 'idle' ],\n\n  search: function (pointer, eventType, eventTarget) {\n    const pointerType = utils.getPointerType(pointer);\n    const pointerId = utils.getPointerId(pointer);\n    const details = { pointer, pointerId, pointerType, eventType, eventTarget };\n\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume: function ({ pointerType, eventType, eventTarget }) {\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (const interaction of scope.interactions) {\n      let element = eventTarget;\n\n      if (interaction.simulation && interaction.simulation.allowResume\n          && (interaction.pointerType === pointerType)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentNode(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen: function ({ pointerId, pointerType, eventType }) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null;\n    }\n\n    let firstNonActive;\n\n    for (const interaction of scope.interactions) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !utils.contains(interaction.pointerIds, pointerId)) { continue; }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction;\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction;\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive;\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function ({ pointerId }) {\n    for (const interaction of scope.interactions) {\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle: function ({ pointerType }) {\n    for (const interaction of scope.interactions) {\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        const target = interaction.target;\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointerIds.length >= 2) {\n        continue;\n      }\n\n      if (!interaction.interacting() && (pointerType === interaction.pointerType)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n};\n\nmodule.exports = finder;\n","const win        = require('./window');\nconst isWindow   = require('./isWindow');\n\nconst is = {\n  array   : () => {},\n\n  window  : thing => thing === win.window || isWindow(thing),\n\n  docFrag : thing => is.object(thing) && thing.nodeType === 11,\n\n  object  : thing => !!thing && (typeof thing === 'object'),\n\n  function: thing => typeof thing === 'function',\n\n  number  : thing => typeof thing === 'number'  ,\n\n  bool    : thing => typeof thing === 'boolean' ,\n\n  string  : thing => typeof thing === 'string'  ,\n\n  element: thing => {\n    if (!thing || (typeof thing !== 'object')) { return false; }\n\n    const _window = win.getWindow(thing) || win.window;\n\n    return (/object|function/.test(typeof _window.Element)\n      ? thing instanceof _window.Element //DOM2\n      : thing.nodeType === 1 && typeof thing.nodeName === 'string');\n  },\n\n  plainObject: thing => is.object(thing) && thing.constructor.name === 'Object',\n};\n\nis.array = thing => (is.object(thing)\n  && (typeof thing.length !== 'undefined')\n  && is.function(thing.splice));\n\nmodule.exports = is;\n","module.exports = (thing) => !!(thing && thing.Window) && (thing instanceof thing.Window);\n","function pointerExtend (dest, source) {\n  for (const prop in source) {\n    const prefixedPropREs = module.exports.prefixedPropREs;\n    let deprecated = false;\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true;\n        break;\n      }\n    }\n\n    if (!deprecated && typeof source[prop] !== 'function') {\n      dest[prop] = source[prop];\n    }\n  }\n  return dest;\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n};\n\nmodule.exports = pointerExtend;\n","const hypot         = require('./hypot');\nconst browser       = require('./browser');\nconst dom           = require('./domObjects');\nconst domUtils      = require('./domUtils');\nconst domObjects    = require('./domObjects');\nconst is            = require('./is');\nconst pointerExtend = require('./pointerExtend');\n\nconst pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setCoordDeltas: function (targetObj, prev, cur) {\n    targetObj.page.x    = cur.page.x    - prev.page.x;\n    targetObj.page.y    = cur.page.y    - prev.page.y;\n    targetObj.client.x  = cur.client.x  - prev.client.x;\n    targetObj.client.y  = cur.client.y  - prev.client.y;\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp;\n\n    // set pointer velocity\n    const dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed   = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx      = targetObj.page.x / dt;\n    targetObj.page.vy      = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx    = targetObj.client.x / dt;\n    targetObj.client.vy    = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function  (pointer) {\n    return (pointer instanceof dom.Event || pointer instanceof dom.Touch);\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    }\n    else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    }\n    else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return is.number(pointer.pointerId)? pointer.pointerId : pointer.identifier;\n  },\n\n  setCoords: function (targetObj, pointers, timeStamp) {\n    const pointer = (pointers.length > 1\n                     ? pointerUtils.pointerAverage(pointers)\n                     : pointers[0]);\n\n    const tmpXY = {};\n\n    pointerUtils.getPageXY(pointer, tmpXY);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    pointerUtils.getClientXY(pointer, tmpXY);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = is.number(timeStamp) ? timeStamp :new Date().getTime();\n  },\n\n  pointerExtend: pointerExtend,\n\n  getTouchPair: function (event) {\n    const touches = [];\n\n    // array of touches is supplied\n    if (is.array(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0];\n          touches[1] = event.changedTouches[0];\n        }\n        else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0];\n          touches[1] = event.changedTouches[1];\n        }\n      }\n      else {\n        touches[0] = event.touches[0];\n        touches[1] = event.touches[1];\n      }\n    }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    const average = {\n      pageX  : 0,\n      pageY  : 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0,\n    };\n\n    for (const pointer of pointers) {\n      for (const prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (const prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    const touches = pointerUtils.getTouchPair(event);\n    const minX = Math.min(touches[0].pageX, touches[1].pageX);\n    const minY = Math.min(touches[0].pageY, touches[1].pageY);\n    const maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    const maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY,\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n\n\n    const dx = touches[0][sourceX] - touches[1][sourceX];\n    const dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n    const dx = touches[1][sourceX] - touches[0][sourceX];\n    const dy = touches[1][sourceY] - touches[0][sourceY];\n    const angle = 180 * Math.atan2(dy , dx) / Math.PI;\n\n    return  angle;\n  },\n\n  getPointerType: function (pointer) {\n    return is.string(pointer.pointerType)\n      ? pointer.pointerType\n      : is.number(pointer.pointerType)\n        ? [undefined, undefined,'touch', 'pen', 'mouse'][pointer.pointerType]\n          // if the PointerEvent API isn't available, then the \"pointer\" must\n          // be either a MouseEvent, TouchEvent, or Touch object\n          : /touch/.test(pointer.type) || pointer instanceof domObjects.Touch\n            ? 'touch'\n            : 'mouse';\n  },\n\n  // [ event.target, event.currentTarget ]\n  getEventTargets: function (event) {\n    const path = is.function(event.composedPath) ? event.composedPath() : event.path;\n\n    return [\n      domUtils.getActualElement(path ? path[0] : event.target),\n      domUtils.getActualElement(event.currentTarget),\n    ];\n  },\n};\n\nmodule.exports = pointerUtils;\n","const { window } = require('./window');\n\nconst vendors = ['ms', 'moz', 'webkit', 'o'];\nlet lastTime = 0;\nlet request;\nlet cancel;\n\nfor (let x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] +'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    const currTime = new Date().getTime();\n    const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    const id = setTimeout(function () { callback(currTime + timeToCall); },\n                          timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request,\n  cancel,\n};\n","const extend = require('./extend');\nconst is = require('./is');\nconst {\n  closest,\n  parentNode,\n  getElementRect,\n} = require('./domUtils');\n\nconst rectUtils = {\n  getStringOptionResult: function (value, interactable, element) {\n    if (!is.string(value)) {\n      return null;\n    }\n\n    if (value === 'parent') {\n      value = parentNode(element);\n    }\n    else if (value === 'self') {\n      value = interactable.getRect(element);\n    }\n    else {\n      value = closest(element, value);\n    }\n\n    return value;\n  },\n\n  resolveRectLike: function (value, interactable, element, functionArgs) {\n    value = rectUtils.getStringOptionResult(value, interactable, element) || value;\n\n    if (is.function(value)) {\n      value = value.apply(null, functionArgs);\n    }\n\n    if (is.element(value)) {\n      value = getElementRect(value);\n    }\n\n    return value;\n  },\n\n  rectToXY: function (rect) {\n    return  rect && {\n      x: 'x' in rect ? rect.x : rect.left,\n      y: 'y' in rect ? rect.y : rect.top,\n    };\n  },\n\n  xywhToTlbr: function (rect) {\n    if (rect && !('left' in rect && 'top' in rect)) {\n      rect = extend({}, rect);\n\n      rect.left   = rect.x || 0;\n      rect.top    = rect.y || 0;\n      rect.right  = rect.right   || (rect.left + rect.width);\n      rect.bottom = rect.bottom  || (rect.top + rect.height);\n    }\n\n    return rect;\n  },\n\n  tlbrToXywh: function (rect) {\n    if (rect && !('x' in rect && 'y' in rect)) {\n      rect = extend({}, rect);\n\n      rect.x      = rect.left || 0;\n      rect.top    = rect.top  || 0;\n      rect.width  = rect.width  || (rect.right  - rect.x);\n      rect.height = rect.height || (rect.bottom - rect.y);\n    }\n\n    return rect;\n  },\n};\n\nmodule.exports = rectUtils;\n","const win = module.exports;\nconst isWindow = require('./isWindow');\n\nfunction init (window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  const el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document\n      && typeof window.wrap === 'function'\n    && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window);\n  }\n\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window     = undefined;\n  win.realWindow = undefined;\n}\nelse {\n  init(window);\n}\n\nwin.getWindow = function getWindow (node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  const rootNode = (node.ownerDocument || node);\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n","const interact = require('interactjs');\n\nlet activeNode, dropzones, callbackWhenDrop;\n\nfunction offset(el) {\n\tconst rect = el.getBoundingClientRect();\n\treturn { top: rect.top, left: rect.left };\n}\n\nfunction dragMoveListener(event) {\n\tconst target = event.target,\n\t\t// keep the dragged position in the data-x/data-y attributes\n\t\tx = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,\n\t\ty = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n\ttarget.classList.add('drag-active');\n\t// translate the element\n\ttarget.style.webkitTransform = target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\n\n\t// update the position attributes\n\ttarget.setAttribute('data-x', x);\n\ttarget.setAttribute('data-y', y);\n}\n\nfunction initDrag() {\n\tconst rect = activeNode.getBoundingClientRect();\n\tconst origin = {\n\t\tx: rect.right,\n\t\ty: rect.top,\n\t};\n\tlet isEntered = false;\n\tlet dropZoneCurrent;\n\n\t// enable draggables to be dropped into this\n\tinteract('#mixesGrid .swatch:not(.disabled)').dropzone({\n\t\t// only accept elements matching this CSS selector\n\t\taccept: '.drag-drop',\n\t\t// Require a 75% element overlap for a drop to be possible\n\t\toverlap: 0.25,\n\n\t\t// listen for drop related events:\n\n\t\tondropactivate: function(event) {\n\t\t\t// add active dropzone feedback\n\t\t\tevent.target.classList.add('drop-active');\n\t\t\tconst rect = offset(event.relatedTarget);\n\t\t\torigin.x = rect.left;\n\t\t\torigin.y = rect.top;\n\t\t},\n\t\tondragenter: function(event) {\n\t\t\tvar draggableElement = event.relatedTarget;\n\t\t\tvar dropzoneElement = event.target;\n\n\t\t\t// feedback the possibility of a drop\n\t\t\tdropzoneElement.classList.add('drop-target');\n\t\t\tdraggableElement.classList.add('can-drop');\n\t\t\tisEntered = true;\n\t\t\tfor (let i = 0; i < dropzones.length; i++) {\n\t\t\t\tif (dropzones[i].isMyNode(dropzoneElement)) {\n\t\t\t\t\tdropZoneCurrent = dropzones[i];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tondragleave: function(event) {\n\t\t\t// remove the drop feedback style\n\t\t\tevent.target.classList.remove('drop-target');\n\t\t\tevent.relatedTarget.classList.remove('can-drop');\n\t\t\tisEntered = false;\n\t\t\tdropZoneCurrent = null;\n\t\t},\n\t\tondrop: function(event) {\n\t\t\tevent.relatedTarget.textContent = 'Dropped';\n\t\t},\n\t\tondropdeactivate: function(event) {\n\t\t\t// remove active dropzone feedback\n\t\t\tevent.target.classList.remove('drop-active');\n\t\t\tevent.target.classList.remove('drop-target');\n\t\t},\n\t});\n\n\tinteract('.drag-drop').draggable({\n\t\tinertia: true,\n\t\trestrict: {\n\t\t\trestriction: 'parent',\n\t\t\tendOnly: false,\n\t\t\telementRect: { top: 0, left: 0, bottom: 1, right: 0 },\n\t\t},\n\t\tautoScroll: false,\n\t\t// dragMoveListener from the dragging demo above\n\t\tonmove: dragMoveListener,\n\t\tonend: (event) => {\n\t\t\tconst target = event.target;\n\t\t\ttarget.classList.remove('drag-active');\n\t\t\tconst isEnabled =\n\t\t\t\t!dropZoneCurrent || !dropZoneCurrent.el.classList.contains('disabled');\n\t\t\tif (isEntered && isEnabled) {\n\t\t\t\tconst rect = offset(dropZoneCurrent.el);\n\t\t\t\ttarget.style.transform = `translate(0, 0)`;\n\t\t\t\ttarget.style.position = 'absolute';\n\t\t\t\ttarget.style.left = `${rect.left}px`;\n\t\t\t\ttarget.style.top = `${rect.top}px`;\n\t\t\t\tinteract(event.target).unset();\n\t\t\t\tconst index = [].indexOf.call(\n\t\t\t\t\tdropZoneCurrent.el.parentNode.children,\n\t\t\t\t\tdropZoneCurrent.el\n\t\t\t\t);\n\t\t\t\tisEntered = false;\n\t\t\t\tsetTimeout(callbackWhenDrop(dropZoneCurrent, index), 500);\n\t\t\t} else {\n\t\t\t\t// Out\n\t\t\t\ttarget.style.transform = 'translate(0, 0)';\n\t\t\t\ttarget.style.webkitTransform = target.style.transform =\n\t\t\t\t\t'translate(' + 0 + 'px, ' + 0 + 'px)';\n\n\t\t\t\t// update the position attributes\n\t\t\t\ttarget.setAttribute('data-x', 0);\n\t\t\t\ttarget.setAttribute('data-y', 0);\n\t\t\t}\n\t\t},\n\t});\n}\n\nfunction setActiveNode(activeNodeEntry) {\n\tactiveNode = activeNodeEntry;\n}\n\nfunction init(activeNodeEntry, dropzonesEntry, callbackWhenDropEntry) {\n\tactiveNode = activeNodeEntry;\n\tdropzones = dropzonesEntry;\n\tcallbackWhenDrop = callbackWhenDropEntry;\n\tinitDrag();\n}\n\nconst API = {\n\tinit: init,\n\tsetActiveNode: setActiveNode,\n};\n\nmodule.exports = API;\n","let swatchesGrid = document.getElementById('swatchesGrid');\nlet mixesGrid = document.getElementById('mixesGrid');\n\nlet size = 0;\nlet swatchNodes, dropzoneNodes;\n\nfunction fillGrid(wrapperGrid) {\n\twhile (wrapperGrid.firstChild) {\n\t\twrapperGrid.removeChild(wrapperGrid.firstChild);\n\t}\n\tlet items = [];\n\tfor (let i = 0; i < size; i++) {\n\t\tconst itemNode = document.createElement('div');\n\t\titems.push(itemNode);\n\t\titemNode.classList.add('swatch', `swatches__swatch${i + 1}`);\n\t\twrapperGrid.append(itemNode);\n\t}\n\treturn items;\n}\n\nfunction init(numberOfItems) {\n\tsize = numberOfItems;\n\tswatchNodes = fillGrid(swatchesGrid);\n\tdropzoneNodes = fillGrid(mixesGrid);\n\treturn {\n\t\tswatchNodes: swatchNodes,\n\t\tdropzoneNodes: dropzoneNodes,\n\t};\n}\n\nconst API = {\n\tinit: init,\n};\nmodule.exports = API;\n","const brightnessCoef = 20;\nlet swatchesHistorical = [];\n\nfunction ColorObject(cmyk, el) {\n\tthis.cmyk = cmyk;\n\tthis.el = el;\n\tthis.setCMYK(cmyk);\n\tthis.isEnabled = true;\n}\n\nColorObject.prototype.getCMYK = function() {\n\tif (this.el) {\n\t\treturn JSON.parse('[' + this.el.getAttribute('data-cmyk') + ']');\n\t}\n\treturn null;\n};\n\nColorObject.prototype.setCMYK = function(cmyk) {\n\tthis.cmyk = cmyk;\n\tthis.el.setAttribute('data-cmyk', cmyk);\n\twhile (this.el.firstChild) {\n\t\tthis.el.firstChild.remove();\n\t}\n\tconst cmykNode = document.createElement('span');\n\tcmykNode.classList.add('swatch__cmyk');\n\tcmykNode.innerHTML = cmyk;\n\tthis.el.append(cmykNode);\n\tthis.el.style.backgroundColor = getRGBColor(convertCMYKtoRGB(cmyk));\n};\n\nColorObject.prototype.isMyNode = function(el) {\n\treturn this.el === el;\n};\n\nfunction getRandomInterval(min, max) {\n\tmin = Math.ceil(min);\n\tmax = Math.floor(max);\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRGBColor(RGBArray) {\n\treturn `rgb(${RGBArray[0]}, ${RGBArray[1]}, ${RGBArray[2]})`;\n}\n\nfunction convertCMYKtoRGB(cmyk) {\n\tvar color = [];\n\tcolor.push(255 * (1 - cmyk[0] / 100) * (1 - cmyk[3] / 100));\n\tcolor.push(255 * (1 - cmyk[1] / 100) * (1 - cmyk[3] / 100));\n\tcolor.push(255 * (1 - cmyk[2] / 100) * (1 - cmyk[3] / 100));\n\treturn color;\n\t//return convert.cmyk.rgb(`${cmyk[0]}%`, `${cmyk[1]}%`, `${cmyk[2]}%`, `${cmyk[3]}%`);\n}\n\nfunction getColorCMYKRandom() {\n\tconst cmyk = [];\n\tcmyk.push(getRandomInterval(0, 100));\n\tcmyk.push(getRandomInterval(0, 100));\n\tcmyk.push(getRandomInterval(0, 100));\n\tcmyk.push(0);\n\tif (calculateBrightnessCoefficient(cmyk) <= brightnessCoef) {\n\t\treturn getColorCMYKRandom();\n\t}\n\tif (!calculateSimilarCoefficient(cmyk)) {\n\t\treturn getColorCMYKRandom();\n\t}\n\tswatchesHistorical.push(cmyk);\n\treturn cmyk;\n}\n\nfunction calculateSimilarCoefficient(cmyk) {\n\tlet cont = 0;\n\tfor (let i = 0; i < swatchesHistorical.length; i++) {\n\t\tlet summation = 0;\n\t\tfor (let j = 0; j < cmyk.length; j++) {\n\t\t\tconst absSimilar = Math.abs(cmyk[j] - swatchesHistorical[i][j]);\n\t\t\tsummation += absSimilar;\n\t\t}\n\t\tif (summation > 20) {\n\t\t\tcont++;\n\t\t}\n\t}\n\treturn cont === swatchesHistorical.length;\n}\n\nfunction calculateBrightnessCoefficient(cmyk) {\n\tlet summation = 0;\n\tfor (let i = 0; i < cmyk.length; i++) {\n\t\tsummation += cmyk[i];\n\t}\n\treturn summation;\n}\n\nfunction getColorRelationed(cmyk) {\n\tlet colorRelationed = [];\n\tfor (let i = 0; i < cmyk.length; i++) {\n\t\tconst percentage = Math.random(0, 1).toFixed(2);\n\t\tconst result = parseInt(cmyk[i] * percentage, 10);\n\t\tcolorRelationed.push(result);\n\t}\n\treturn colorRelationed;\n}\n\nfunction addColors(color1, color2) {\n\tif (color1.length === color2.length) {\n\t\tlet color = [];\n\t\tfor (let i = 0; i < color1.length; i++) {\n\t\t\tconst add = parseInt(color1[i], 10) + parseInt(color2[i], 10);\n\t\t\tcolor.push(add < 100 ? add : 100);\n\t\t}\n\t\treturn color;\n\t}\n\treturn null;\n}\n\nfunction subtractColors(color1, color2) {\n\tif (color1.length === color2.length) {\n\t\tlet color = [];\n\t\tfor (let i = 0; i < color1.length; i++) {\n\t\t\tconst sub = parseInt(color1[i], 10) - parseInt(color2[i], 10);\n\t\t\tcolor.push(sub > 0 ? sub : 0);\n\t\t}\n\t\treturn color;\n\t}\n\treturn null;\n}\n\nconst API = {\n\tColorObject: ColorObject,\n\tgetRGBColor: getRGBColor,\n\tconvertCMYKtoRGB: convertCMYKtoRGB,\n\tgetColorCMYKRandom: getColorCMYKRandom,\n\tgetColorRelationed: getColorRelationed,\n\taddColors: addColors,\n\tsubtractColors: subtractColors,\n\tgetRandomInterval: getRandomInterval,\n};\n\nmodule.exports = API;\n","const _ = require('lodash');\nconst drag = require('./drag');\nconst grid = require('./grid');\nconst color = require('./color');\n\nlet app;\nlet swatches, dropzones;\nlet swatchNodes, dropzoneNodes;\nlet activeColorObject;\nlet contSuccess;\n\nlet levelSuccessed, levelFailed, scoreToAument;\n\nfunction checkSuccess(index) {\n\tif (_.isEqual(swatches[index].cmyk, dropzones[index].cmyk)) {\n\t\tswatches[index].el.classList.add('match-swatch');\n\t\tdropzones[index].el.classList.add('match-mixer');\n\t\tswatches[index].isEnabled = false;\n\t\tdropzones[index].isEnabled = false;\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction updateActive(newActiveColorObject) {\n\t// Borramos el Activo viejo:\n\tapp.removeChild(activeColorObject.el);\n\tactiveColorObject = newActiveColorObject;\n\tapp.append(activeColorObject.el);\n\tdrag.setActiveNode(activeColorObject.el);\n}\n\nfunction doMix(dropzone, index) {\n\tlet cmyk = color.addColors(dropzone.cmyk, activeColorObject.cmyk);\n\t// Actualizamos el Mix:\n\tdropzone.setCMYK(cmyk);\n\t// Hacemos el checkeo en los swatches en busca de una coincidencia con nuestro active + dropzone\n\t// Si hemos acertado:\n\tif (checkSuccess(index)) {\n\t\tcontSuccess++;\n\t\tscoreToAument();\n\t\tif (contSuccess !== swatches.length) {\n\t\t\tdropzone.el.classList.add('disabled');\n\t\t\t// Seteamos un nuevo activo:\n\t\t\tlet newActiveColorObject = createActiveObject();\n\t\t\tupdateActive(newActiveColorObject);\n\t\t} else {\n\t\t\tapp.removeChild(activeColorObject.el);\n\t\t\tactiveColorObject = null;\n\t\t\tcontSuccess = 0;\n\t\t\tlevelSuccessed();\n\t\t}\n\t} else {\n\t\tconst { dropzoneWasCorrect, swatchWasCorrect } = searchCorrectSwatchAndDropzone();\n\t\tapp.removeChild(activeColorObject.el);\n\t\tactiveColorObject = null;\n\t\tcontSuccess = 0;\n\t\tlevelFailed(dropzoneWasCorrect, swatchWasCorrect, swatches, dropzones);\n\t}\n}\n\nfunction searchCorrectSwatchAndDropzone() {\n\tlet dropzoneWasCorrect, swatchWasCorrect;\n\tfor (let i = 0; i < swatches.length; i++) {\n\t\tfor (let j = 0; j < dropzones.length; j++) {\n\t\t\tlet cmyk = color.addColors(activeColorObject.cmyk, dropzones[j].cmyk);\n\t\t\tif (_.isEqual(cmyk, swatches[i].cmyk)) {\n\t\t\t\tdropzoneWasCorrect = dropzones[j];\n\t\t\t\tswatchWasCorrect = swatches[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn {\n\t\tdropzoneWasCorrect,\n\t\tswatchWasCorrect,\n\t};\n}\n\nfunction getRandomEnabledItem() {\n\tconst swatchActives = swatches.filter((swatch) => swatch.isEnabled === true);\n\tconst sample = _.sample(swatchActives);\n\treturn sample.index;\n}\n\nfunction createActiveObject() {\n\tconst node = document.createElement('div');\n\tnode.classList.add('active__swatch', 'swatch', 'drag-drop', 'active');\n\n\tconst indexRandom = getRandomEnabledItem();\n\n\treturn new color.ColorObject(\n\t\tcolor.subtractColors(swatches[indexRandom].cmyk, dropzones[indexRandom].cmyk),\n\t\tnode\n\t);\n}\n\nfunction initSwatches(swatchesNodes) {\n\tlet swatches = [];\n\tfor (let i = 0; i < swatchesNodes.length; i++) {\n\t\tconst swatch = new color.ColorObject(color.getColorCMYKRandom(), swatchesNodes[i]);\n\t\tswatch.index = i;\n\t\tswatches.push(swatch);\n\t}\n\treturn swatches;\n}\n\nfunction initDropzones(dropzoneNodes) {\n\tconst dropzones = [];\n\tfor (let i = 0; i < dropzoneNodes.length; i++) {\n\t\tdropzones.push(\n\t\t\tnew color.ColorObject(color.getColorRelationed(swatches[i].cmyk), dropzoneNodes[i])\n\t\t);\n\t}\n\treturn dropzones;\n}\n\nfunction playLevel(numRows, numCols) {\n\tcontSuccess = 0;\n\t// Draw grid:\n\t({ swatchNodes, dropzoneNodes } = grid.init(numRows, numCols));\n\n\t// Init Swatches, Dropzones and Active\n\tswatches = initSwatches(swatchNodes);\n\tdropzones = initDropzones(dropzoneNodes);\n\tactiveColorObject = createActiveObject();\n\tdrag.init(activeColorObject.el, dropzones, doMix);\n\tapp.append(activeColorObject.el);\n}\n\nfunction setup(appEntry, levelSuccessedEntry, levelFailedEntry, scoreToAumentEntry) {\n\tapp = appEntry;\n\tlevelSuccessed = levelSuccessedEntry;\n\tlevelFailed = levelFailedEntry;\n\tscoreToAument = scoreToAumentEntry;\n}\n\nconst API = {\n\tsetup: setup,\n\tplayLevel: playLevel,\n};\n\nmodule.exports = API;\n","function getData(key) {\n  return localStorage.getItem(key);\n}\n\nfunction saveData(key, value) {\n  localStorage.setItem(key, value);\n}\n\nconst API = {\n  saveData: saveData,\n  getData: getData\n};\n\nmodule.exports = API;\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}